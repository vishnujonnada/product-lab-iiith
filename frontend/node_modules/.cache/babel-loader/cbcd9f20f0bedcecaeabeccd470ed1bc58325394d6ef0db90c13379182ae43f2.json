{"ast":null,"code":"var _jsxFileName = \"/home/vishnapanyala/Desktop/myapp/src/components/annotate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ReactPictureAnnotation } from 'react-picture-annotation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnnotateImage = _ref => {\n  _s();\n  let {\n    image,\n    annotations: initialAnnotations,\n    onChangeAnnotations\n  } = _ref;\n  const [pageSize, setPageSize] = useState({\n    width: 3 / 5 * window.innerWidth,\n    height: 3.5 / 5 * window.innerHeight\n  });\n  const [annotations, setAnnotations] = useState([]);\n  useEffect(() => {\n    const shiftWidth = 0.1 * window.innerWidth;\n    setPageSize(prevSize => ({\n      ...prevSize,\n      width: prevSize.width + shiftWidth\n    }));\n  }, []);\n  useEffect(() => {\n    setAnnotations(initialAnnotations);\n  }, [initialAnnotations]);\n  console.log('Annotations:', annotations);\n  const onResize = () => {\n    setPageSize({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  };\n  useEffect(() => {\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, []);\n  const onSelect = selectedId => console.log(selectedId);\n\n  // const onChange = (data) => {\n  //   const updatedAnnotations = data.reduce((acc, currentAnnotation) => {\n  //     const existingIndex = acc.findIndex((a) => a.id === currentAnnotation.id);\n  //     if (existingIndex !== -1) {\n  //       // Update existing annotation with the latest values\n  //       acc[existingIndex] = currentAnnotation;\n  //     } else {\n  //       // Add new annotation\n  //       acc.push(currentAnnotation);\n  //     }\n  //     return acc;\n  //   }, [...annotations]);\n\n  //   setAnnotations(updatedAnnotations);\n  //   onChangeAnnotations(updatedAnnotations);\n  // };\n\n  // const handleDeleteBox = (id) => {\n  //   const updatedAnnotations = annotations.filter((annotation) => annotation.id !== id);\n  //   setAnnotations(updatedAnnotations);\n  //   onChangeAnnotations(updatedAnnotations);\n  // };\n\n  const onChange = data => {\n    setAnnotations(data);\n    onChangeAnnotations(data);\n  };\n  const handleDeleteBox = id => {\n    console.log(id);\n    const updatedAnnotations = annotations.filter(annotation => annotation.id !== id);\n    setAnnotations(updatedAnnotations);\n    onChangeAnnotations(updatedAnnotations);\n  };\n  const customShapeStyle = {\n    padding: 5,\n    // text padding\n    fontSize: 12,\n    // text font size\n    fontColor: \"#212529\",\n    // text font color\n    fontBackground: \"#f8f9fa\",\n    // text background color\n    fontFamily: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', Helvetica, Arial, sans-serif\",\n    lineWidth: 3,\n    shapeBackground: 'hsla(210, 16%, 93%, 0.2)',\n    shapeStrokeStyle: 'red',\n    // Set the stroke color to red\n    shadowBlur: 10,\n    shapeShadowStyle: 'hsla(210, 9%, 31%, 0.35)',\n    transformerBackground: '#5c7cfa',\n    transformerSize: 10\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AnnotateImage\",\n    children: /*#__PURE__*/_jsxDEV(ReactPictureAnnotation, {\n      image: image,\n      annotationData: annotations,\n      onSelect: onSelect,\n      onChange: onChange\n      // width={4*pageSize.width/5}\n      // height={3.8*pageSize.height/5}\n      ,\n      width: pageSize.width + 200,\n      height: pageSize.height,\n      renderAnnotation: _ref2 => {\n        let {\n          annotation\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            left: annotation.position.x,\n            top: annotation.position.y\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: annotation.comment,\n            onChange: e => {\n              const updatedAnnotations = annotations.map(a => {\n                if (a.id === annotation.id) {\n                  return {\n                    ...a,\n                    comment: e.target.value\n                  };\n                }\n                return a;\n              });\n              setAnnotations(updatedAnnotations);\n              onChangeAnnotations(updatedAnnotations);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteBox(annotation.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this);\n      },\n      annotationStyle: customShapeStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(AnnotateImage, \"4V/SlVid8CwarZQA5vvdoOuwTUU=\");\n_c = AnnotateImage;\nexport default AnnotateImage;\nvar _c;\n$RefreshReg$(_c, \"AnnotateImage\");","map":{"version":3,"names":["React","useState","useEffect","ReactPictureAnnotation","jsxDEV","_jsxDEV","AnnotateImage","_ref","_s","image","annotations","initialAnnotations","onChangeAnnotations","pageSize","setPageSize","width","window","innerWidth","height","innerHeight","setAnnotations","shiftWidth","prevSize","console","log","onResize","addEventListener","removeEventListener","onSelect","selectedId","onChange","data","handleDeleteBox","id","updatedAnnotations","filter","annotation","customShapeStyle","padding","fontSize","fontColor","fontBackground","fontFamily","lineWidth","shapeBackground","shapeStrokeStyle","shadowBlur","shapeShadowStyle","transformerBackground","transformerSize","className","children","annotationData","renderAnnotation","_ref2","style","position","left","x","top","y","type","value","comment","e","map","a","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","annotationStyle","_c","$RefreshReg$"],"sources":["/home/vishnapanyala/Desktop/myapp/src/components/annotate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ReactPictureAnnotation } from 'react-picture-annotation';\n\nconst AnnotateImage = ({ image, annotations: initialAnnotations, onChangeAnnotations }) => {\n  const [pageSize, setPageSize] = useState({\n    width: 3/5*window.innerWidth ,\n    height: 3.5/5*window.innerHeight\n  });\n  const [annotations, setAnnotations] = useState([]);\n\n  useEffect(() => {\n    const shiftWidth = 0.1 * window.innerWidth;\n    setPageSize(prevSize => ({\n      ...prevSize,\n      width: prevSize.width + shiftWidth\n    }));\n  }, []);\n  \n\n  useEffect(() => {\n    setAnnotations(initialAnnotations);\n  }, [initialAnnotations]);\n\n  console.log('Annotations:', annotations);\n\n  const onResize = () => {\n    setPageSize({ width: window.innerWidth, height: window.innerHeight });\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, []);\n\n  const onSelect = (selectedId) => console.log(selectedId);\n\n  // const onChange = (data) => {\n  //   const updatedAnnotations = data.reduce((acc, currentAnnotation) => {\n  //     const existingIndex = acc.findIndex((a) => a.id === currentAnnotation.id);\n  //     if (existingIndex !== -1) {\n  //       // Update existing annotation with the latest values\n  //       acc[existingIndex] = currentAnnotation;\n  //     } else {\n  //       // Add new annotation\n  //       acc.push(currentAnnotation);\n  //     }\n  //     return acc;\n  //   }, [...annotations]);\n    \n  //   setAnnotations(updatedAnnotations);\n  //   onChangeAnnotations(updatedAnnotations);\n  // };\n  \n  // const handleDeleteBox = (id) => {\n  //   const updatedAnnotations = annotations.filter((annotation) => annotation.id !== id);\n  //   setAnnotations(updatedAnnotations);\n  //   onChangeAnnotations(updatedAnnotations);\n  // };\n\n  const onChange = (data) => {\n    setAnnotations(data);\n    onChangeAnnotations(data);\n  };\n\n  const handleDeleteBox = (id) => {\n    console.log(id);\n    const updatedAnnotations = annotations.filter((annotation) => annotation.id !== id);\n    setAnnotations(updatedAnnotations);\n    onChangeAnnotations(updatedAnnotations);\n  };\n\n  const customShapeStyle = {\n    padding: 5, // text padding\n  fontSize: 12, // text font size\n  fontColor: \"#212529\", // text font color\n  fontBackground: \"#f8f9fa\", // text background color\n  fontFamily:\n    \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', Helvetica, Arial, sans-serif\",\n\n    lineWidth: 3,\n    shapeBackground: 'hsla(210, 16%, 93%, 0.2)',\n    shapeStrokeStyle: 'red', // Set the stroke color to red\n    shadowBlur: 10,\n    shapeShadowStyle: 'hsla(210, 9%, 31%, 0.35)',\n    transformerBackground: '#5c7cfa',\n    transformerSize: 10\n  };\n  \n\n  return (\n    <div className=\"AnnotateImage\">\n      <ReactPictureAnnotation\n        image={image}\n        annotationData={annotations}\n        onSelect={onSelect}\n        onChange={onChange}\n        // width={4*pageSize.width/5}\n        // height={3.8*pageSize.height/5}\n        width={pageSize.width + 200}\n        height={pageSize.height}\n        renderAnnotation={({ annotation }) => (\n          <div style={{ position: 'absolute', left: annotation.position.x, top: annotation.position.y }}>\n            <input\n              type=\"text\"\n              value={annotation.comment}\n              onChange={(e) => {\n                const updatedAnnotations = annotations.map((a) => {\n                  if (a.id === annotation.id) {\n                    return { ...a, comment: e.target.value };\n                  }\n                  return a;\n                });\n                setAnnotations(updatedAnnotations);\n                onChangeAnnotations(updatedAnnotations);\n              }}\n            />\n            <button onClick={() => handleDeleteBox(annotation.id)}>Delete</button>\n          </div>\n        )}\n        annotationStyle={customShapeStyle} \n      />\n    </div>\n  );\n};\n\nexport default AnnotateImage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
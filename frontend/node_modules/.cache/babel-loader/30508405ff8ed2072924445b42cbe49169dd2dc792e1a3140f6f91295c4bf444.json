{"ast":null,"code":"var _jsxFileName = \"/home/vishnapanyala/Desktop/myapp/src/components/PrivateRoutes.js\";\nimport { useEffect } from 'react';\nimport { Outlet, Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoutes = () => {\n  const userEmail = localStorage.getItem('userEmail');\n  console.log('userEmail:', userEmail);\n  const isUserEmailNull = userEmail === null;\n  const isUserEmailEmpty = userEmail === '';\n  console.log('isUserEmailNull:', isUserEmailNull);\n  console.log('isUserEmailEmpty:', isUserEmailEmpty);\n  const isValidUser = !isUserEmailNull && !isUserEmailEmpty && userEmail !== null;\n  console.log('isValidUser:', isValidUser);\n\n  // // Redirect to the login page if the user is not valid\n  // if (!isValidUser) {\n  //   // You can replace '/login' with the appropriate login route in your application\n  //   // You may also pass state or query parameters to the login route if needed\n  //   Navigate('/login');\n  // }\n\n  if (isValidUser) {\n    return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n};\n_c = PrivateRoutes;\nexport default PrivateRoutes;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoutes\");","map":{"version":3,"names":["useEffect","Outlet","Navigate","jsxDEV","_jsxDEV","PrivateRoutes","userEmail","localStorage","getItem","console","log","isUserEmailNull","isUserEmailEmpty","isValidUser","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/home/vishnapanyala/Desktop/myapp/src/components/PrivateRoutes.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { Outlet, Navigate } from 'react-router-dom';\n\nconst PrivateRoutes = () => {\n\n    const userEmail = localStorage.getItem('userEmail');\nconsole.log('userEmail:', userEmail);\n\nconst isUserEmailNull = userEmail === null;\nconst isUserEmailEmpty = userEmail === '';\nconsole.log('isUserEmailNull:', isUserEmailNull);\nconsole.log('isUserEmailEmpty:', isUserEmailEmpty);\n\nconst isValidUser = !isUserEmailNull && !isUserEmailEmpty && userEmail !== null;\nconsole.log('isValidUser:', isValidUser);\n\n    // // Redirect to the login page if the user is not valid\n    // if (!isValidUser) {\n    //   // You can replace '/login' with the appropriate login route in your application\n    //   // You may also pass state or query parameters to the login route if needed\n    //   Navigate('/login');\n    // }\n\n  if (isValidUser) {\n    return <Outlet />;\n  } else {\n    return <Navigate to=\"/login\" />;\n  }\n};\n\nexport default PrivateRoutes;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAExB,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EACvDC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEJ,SAAS,CAAC;EAEpC,MAAMK,eAAe,GAAGL,SAAS,KAAK,IAAI;EAC1C,MAAMM,gBAAgB,GAAGN,SAAS,KAAK,EAAE;EACzCG,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEC,eAAe,CAAC;EAChDF,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEE,gBAAgB,CAAC;EAElD,MAAMC,WAAW,GAAG,CAACF,eAAe,IAAI,CAACC,gBAAgB,IAAIN,SAAS,KAAK,IAAI;EAC/EG,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEG,WAAW,CAAC;;EAEpC;EACA;EACA;EACA;EACA;EACA;;EAEF,IAAIA,WAAW,EAAE;IACf,oBAAOT,OAAA,CAACH,MAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnB,CAAC,MAAM;IACL,oBAAOb,OAAA,CAACF,QAAQ;MAACgB,EAAE,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;AACF,CAAC;AAACE,EAAA,GAzBId,aAAa;AA2BnB,eAAeA,aAAa;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
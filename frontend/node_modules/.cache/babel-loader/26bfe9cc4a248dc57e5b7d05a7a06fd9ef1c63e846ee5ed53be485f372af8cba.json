{"ast":null,"code":"var _jsxFileName = \"/home/vishnapanyala/Desktop/myapp/src/components/upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadImages = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [label, setLabel] = useState('');\n  const onDrop = acceptedFiles => {\n    // Filter and store only image files\n    const imageFiles = acceptedFiles.filter(file => file.type.startsWith('image/'));\n    setFiles(imageFiles);\n  };\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: 'image/*',\n    // Only allow image files\n    multiple: true // Enable multiple file selection\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps(),\n      className: `dropzone ${isDragActive ? 'active' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag and drop image files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"labelInput\",\n        children: \"Label:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"labelInput\",\n        type: \"text\",\n        value: label,\n        onChange: e => setLabel(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Selected Files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [file.name, \" - \", file.type]\n        }, file.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadImages, \"oNRtF/0nj5rISfM4CaMfj2+hHwg=\", false, function () {\n  return [useDropzone];\n});\n_c = UploadImages;\nexport default UploadImages;\nvar _c;\n$RefreshReg$(_c, \"UploadImages\");","map":{"version":3,"names":["React","useState","useDropzone","jsxDEV","_jsxDEV","UploadImages","_s","files","setFiles","label","setLabel","onDrop","acceptedFiles","imageFiles","filter","file","type","startsWith","getRootProps","getInputProps","isDragActive","accept","multiple","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","map","name","_c","$RefreshReg$"],"sources":["/home/vishnapanyala/Desktop/myapp/src/components/upload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nconst UploadImages = () => {\n  const [files, setFiles] = useState([]);\n  const [label, setLabel] = useState('');\n\n  const onDrop = (acceptedFiles) => {\n    // Filter and store only image files\n    const imageFiles = acceptedFiles.filter((file) => file.type.startsWith('image/'));\n    setFiles(imageFiles);\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: 'image/*', // Only allow image files\n    multiple: true, // Enable multiple file selection\n  });\n\n  return (\n    <div>\n      <div {...getRootProps()} className={`dropzone ${isDragActive ? 'active' : ''}`}>\n        <input {...getInputProps()} />\n        <p>Drag and drop image files here, or click to select files</p>\n      </div>\n      <div>\n        <label htmlFor=\"labelInput\">Label:</label>\n        <input\n          id=\"labelInput\"\n          type=\"text\"\n          value={label}\n          onChange={(e) => setLabel(e.target.value)}\n        />\n      </div>\n      <div>\n        <h3>Selected Files:</h3>\n        <ul>\n          {files.map((file) => (\n            <li key={file.name}>\n              {file.name} - {file.type}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default UploadImages;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
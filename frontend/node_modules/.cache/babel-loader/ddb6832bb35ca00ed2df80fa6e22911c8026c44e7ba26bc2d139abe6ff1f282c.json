{"ast":null,"code":"var _jsxFileName = \"/home/vishnapanyala/Desktop/myapp/src/components/upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { BASE_URL } from './config.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadImages = () => {\n  _s();\n  const [label, setLabel] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n  const onDrop = async acceptedFiles => {\n    try {\n      const totalSize = acceptedFiles.reduce((total, file) => total + file.size, 0);\n      let uploadedSize = 0;\n      for (let i = 0; i < acceptedFiles.length; i++) {\n        const file = acceptedFiles[i];\n        const formData = new FormData();\n        formData.append(\"imageFiles\", file);\n        formData.append(\"user\", localStorage.getItem(\"userEmail\"));\n        formData.append(\"label\", label);\n        const response = await fetch(BASE_URL + \"/image/upload/trainingDataWithoutAnnotations\", {\n          method: \"POST\",\n          body: formData\n        });\n        if (response.ok) {\n          uploadedSize += file.size;\n          const uploadProgress = uploadedSize / totalSize * 100;\n          setProgress(uploadProgress);\n        } else {\n          console.log(\"Upload failed for file:\", file.name);\n        }\n      }\n      console.log(\"All files uploaded successfully\");\n      alert(\"All files uploaded successfully\");\n      // Do something on successful upload of all files\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n    }\n  };\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  });\n  const handleLabelChange = event => {\n    setLabel(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps(),\n        accept: \"image/*\",\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag and drop files here or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: label,\n      onChange: handleLabelChange,\n      placeholder: \"Enter label\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onDrop,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), progress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Uploading \", progress.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadImages, \"ffMY4s0UWulyUchNPJLEr/Mz1UE=\", false, function () {\n  return [useDropzone];\n});\n_c = UploadImages;\nexport default UploadImages;\nvar _c;\n$RefreshReg$(_c, \"UploadImages\");","map":{"version":3,"names":["React","useState","useDropzone","BASE_URL","jsxDEV","_jsxDEV","UploadImages","_s","label","setLabel","progress","setProgress","onDrop","acceptedFiles","totalSize","reduce","total","file","size","uploadedSize","i","length","formData","FormData","append","localStorage","getItem","response","fetch","method","body","ok","uploadProgress","console","log","name","alert","error","getRootProps","getInputProps","handleLabelChange","event","target","value","children","accept","multiple","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","toFixed","_c","$RefreshReg$"],"sources":["/home/vishnapanyala/Desktop/myapp/src/components/upload.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { BASE_URL } from './config.js';\n\nconst UploadImages = () => {\n  const [label, setLabel] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n\n  const onDrop = async (acceptedFiles) => {\n    try {\n      const totalSize = acceptedFiles.reduce((total, file) => total + file.size, 0);\n      let uploadedSize = 0;\n\n      for (let i = 0; i < acceptedFiles.length; i++) {\n        const file = acceptedFiles[i];\n        const formData = new FormData();\n        formData.append(\"imageFiles\", file);\n        formData.append(\"user\", localStorage.getItem(\"userEmail\"));\n        formData.append(\"label\", label);\n\n        const response = await fetch(BASE_URL + \"/image/upload/trainingDataWithoutAnnotations\", {\n          method: \"POST\",\n          body: formData,\n        });\n\n        if (response.ok) {\n          uploadedSize += file.size;\n          const uploadProgress = (uploadedSize / totalSize) * 100;\n          setProgress(uploadProgress);\n        } else {\n          console.log(\"Upload failed for file:\", file.name);\n        }\n      }\n\n      console.log(\"All files uploaded successfully\");\n      alert(\"All files uploaded successfully\");\n      // Do something on successful upload of all files\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n    }\n  };\n\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\n\n  const handleLabelChange = (event) => {\n    setLabel(event.target.value);\n  };\n\n  return (\n    <div>\n      <div {...getRootProps()}>\n        <input {...getInputProps()} accept=\"image/*\" multiple />\n        <p>Drag and drop files here or click to select files</p>\n      </div>\n      <input\n        type=\"text\"\n        value={label}\n        onChange={handleLabelChange}\n        placeholder=\"Enter label\"\n      />\n      <br />\n      <button onClick={onDrop}>Upload</button>\n      {progress > 0 && (\n        <div>\n          <p>Uploading {progress.toFixed(2)}%</p>\n          {/* Add your custom progress popup or UI element here */}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UploadImages;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/vishnapanyala/Desktop/myapp/src/components/upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { BASE_URL } from './config.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadImages = () => {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [label, setLabel] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const handleFileSelect = acceptedFiles => {\n    const filteredFiles = acceptedFiles.filter(file => file.type.startsWith(\"image/\"));\n    setSelectedFiles(filteredFiles);\n  };\n  const handleLabelChange = event => {\n    setLabel(event.target.value);\n  };\n  const handleUpload = async () => {\n    try {\n      const formData = new FormData();\n      selectedFiles.forEach(file => {\n        formData.append(\"imageFiles\", file);\n      });\n      formData.append(\"user\", localStorage.getItem(\"userEmail\"));\n      formData.append(\"label\", label);\n      setUploading(true);\n      const totalSize = Array.from(selectedFiles).reduce((total, file) => {\n        return total + file.size;\n      }, 0);\n      const config = {\n        headers: {\n          \"Content-Length\": totalSize.toString()\n        },\n        onUploadProgress: progressEvent => {\n          const progress = Math.round(progressEvent.loaded / progressEvent.total * 100);\n          setUploadProgress(progress);\n        }\n      };\n      const response = await axios.post(BASE_URL + \"/image/upload/trainingDataWithoutAnnotations\", formData, config);\n      if (response.status === 200) {\n        console.log(\"Files uploaded successfully\");\n        alert(\"Files uploaded successfully\");\n        setSelectedFiles([]);\n        setLabel(\"\");\n        window.location.reload();\n      } else {\n        console.log(\"Upload failed\");\n        // Handle upload failure\n      }\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n    } finally {\n      setUploading(false);\n      setUploadProgress(0);\n    }\n  };\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop: handleFileSelect,\n    multiple: true,\n    accept: \"image/*\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drop the files here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Drag and drop files here, or click to select files\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => document.querySelector('input[type=\"file\"]').click(),\n          children: \"Choose Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected Files: \", selectedFiles.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: label,\n      onChange: handleLabelChange,\n      placeholder: \"Enter label\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: uploading,\n      children: uploading ? \"Uploading...\" : \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Upload Progress: \", uploadProgress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n        value: uploadProgress,\n        max: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadImages, \"hwjAlZrHmbRmaxuxLJH7E7ArIJ8=\", false, function () {\n  return [useDropzone];\n});\n_c = UploadImages;\nexport default UploadImages;\nvar _c;\n$RefreshReg$(_c, \"UploadImages\");","map":{"version":3,"names":["React","useState","useDropzone","BASE_URL","jsxDEV","_jsxDEV","UploadImages","_s","selectedFiles","setSelectedFiles","label","setLabel","uploading","setUploading","uploadProgress","setUploadProgress","handleFileSelect","acceptedFiles","filteredFiles","filter","file","type","startsWith","handleLabelChange","event","target","value","handleUpload","formData","FormData","forEach","append","localStorage","getItem","totalSize","Array","from","reduce","total","size","config","headers","toString","onUploadProgress","progressEvent","progress","Math","round","loaded","response","axios","post","status","console","log","alert","window","location","reload","error","getRootProps","getInputProps","isDragActive","onDrop","multiple","accept","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","document","querySelector","click","length","onChange","placeholder","disabled","max","_c","$RefreshReg$"],"sources":["/home/vishnapanyala/Desktop/myapp/src/components/upload.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { BASE_URL } from './config.js';\n\nconst UploadImages = () => {\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [label, setLabel] = useState(\"\");\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n\n  const handleFileSelect = (acceptedFiles) => {\n    const filteredFiles = acceptedFiles.filter((file) => file.type.startsWith(\"image/\"));\n    setSelectedFiles(filteredFiles);\n  };\n\n  const handleLabelChange = (event) => {\n    setLabel(event.target.value);\n  };\n\n  const handleUpload = async () => {\n  try {\n    const formData = new FormData();\n    selectedFiles.forEach((file) => {\n      formData.append(\"imageFiles\", file);\n    });\n    formData.append(\"user\", localStorage.getItem(\"userEmail\"));\n    formData.append(\"label\", label);\n\n    setUploading(true);\n\n    const totalSize = Array.from(selectedFiles).reduce((total, file) => {\n      return total + file.size;\n    }, 0);\n\n    const config = {\n      headers: {\n        \"Content-Length\": totalSize.toString(),\n      },\n      onUploadProgress: (progressEvent) => {\n        const progress = Math.round((progressEvent.loaded / progressEvent.total) * 100);\n        setUploadProgress(progress);\n      },\n    };\n\n    const response = await axios.post(\n      BASE_URL + \"/image/upload/trainingDataWithoutAnnotations\",\n      formData,\n      config\n    );\n\n    if (response.status === 200) {\n      console.log(\"Files uploaded successfully\");\n      alert(\"Files uploaded successfully\");\n      setSelectedFiles([]);\n      setLabel(\"\");\n      window.location.reload();\n    } else {\n      console.log(\"Upload failed\");\n      // Handle upload failure\n    }\n  } catch (error) {\n    console.error(\"Upload error:\", error);\n  } finally {\n    setUploading(false);\n    setUploadProgress(0);\n  }\n};\n\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop: handleFileSelect,\n    multiple: true,\n    accept: \"image/*\",\n  });\n\n  return (\n    <div>\n      <div {...getRootProps()}>\n        <input {...getInputProps()} />\n        {isDragActive ? (\n          <p>Drop the files here...</p>\n        ) : (\n          <p>\n            Drag and drop files here, or click to select files{\" \"}\n            <button onClick={() => document.querySelector('input[type=\"file\"]').click()}>\n              Choose Files\n            </button>\n          </p>\n        )}\n      </div>\n      <p>Selected Files: {selectedFiles.length}</p> {/* Show number of selected files */}\n      <input\n        type=\"text\"\n        value={label}\n        onChange={handleLabelChange}\n        placeholder=\"Enter label\"\n      />\n      <br />\n      <button onClick={handleUpload} disabled={uploading}>\n        {uploading ? \"Uploading...\" : \"Upload\"}\n      </button>\n      {uploading && (\n        <div>\n          <p>Upload Progress: {uploadProgress}%</p>\n          <progress value={uploadProgress} max=\"100\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default UploadImages;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
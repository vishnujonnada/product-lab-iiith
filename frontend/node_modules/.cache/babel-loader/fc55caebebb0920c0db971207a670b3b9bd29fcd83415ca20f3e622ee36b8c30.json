{"ast":null,"code":"var _jsxFileName = \"/home/vishnapanyala/Desktop/myapp/src/components/imageannotation.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './imageannotation.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageAnnotation = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [labels, setLabels] = useState([]);\n  const [selectedLabels, setSelectedLabels] = useState([]);\n  useEffect(() => {\n    // Fetch images from API\n    fetchImages();\n  }, []);\n  const fetchImages = async () => {\n    try {\n      const response = await fetch('http://10.2.132.134:5000/getImageThumbnailsByRequestID', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          requestID: '10001'\n        })\n      });\n      const data = await response.json();\n      setImages(data.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleImageClick = image => {\n    setSelectedImage(image);\n    setSelectedLabels([]);\n  };\n  const handleLabelToggle = label => {\n    const updatedSelectedLabels = selectedLabels.includes(label) ? selectedLabels.filter(selectedLabel => selectedLabel !== label) : [...selectedLabels, label];\n    setSelectedLabels(updatedSelectedLabels);\n  };\n  const handleDoneClick = () => {\n    // Perform logic to save selected labels for the selected image\n    console.log('Selected Labels:', selectedLabels);\n  };\n  const handleResetClick = () => {\n    setSelectedLabels([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-annotation-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-list\",\n      children: images.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `image-thumbnail ${selectedImage && selectedImage.imageID === image.imageID ? 'selected' : ''}`,\n        onClick: () => handleImageClick(image),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `data:image/jpeg;base64,${image.imageThumbnail}`,\n          alt: `Image ${image.imageID}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, image.imageID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"annotation-section\",\n      children: [selectedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `data:image/jpeg;base64,${selectedImage.imageThumbnail}`,\n          alt: `Selected Image`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Labels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), labels.map(label => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `label ${selectedLabels.includes(label) ? 'selected' : ''}`,\n          onClick: () => handleLabelToggle(label),\n          children: label.name\n        }, label.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"done-button\",\n          onClick: handleDoneClick,\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-button\",\n          onClick: handleResetClick,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageAnnotation, \"riOVtEO2/8kbccmnovlE6PXnMrg=\");\n_c = ImageAnnotation;\nexport default ImageAnnotation;\nvar _c;\n$RefreshReg$(_c, \"ImageAnnotation\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ImageAnnotation","_s","images","setImages","selectedImage","setSelectedImage","labels","setLabels","selectedLabels","setSelectedLabels","fetchImages","response","fetch","method","headers","body","JSON","stringify","requestID","data","json","error","console","handleImageClick","image","handleLabelToggle","label","updatedSelectedLabels","includes","filter","selectedLabel","handleDoneClick","log","handleResetClick","className","children","map","imageID","onClick","src","imageThumbnail","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","id","_c","$RefreshReg$"],"sources":["/home/vishnapanyala/Desktop/myapp/src/components/imageannotation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './imageannotation.css';\n\nconst ImageAnnotation = () => {\n  const [images, setImages] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [labels, setLabels] = useState([]);\n  const [selectedLabels, setSelectedLabels] = useState([]);\n\n  useEffect(() => {\n    // Fetch images from API\n    fetchImages();\n  }, []);\n\n  const fetchImages = async () => {\n    try {\n      const response = await fetch('http://10.2.132.134:5000/getImageThumbnailsByRequestID', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          requestID: '10001'\n        })\n      });\n      const data = await response.json();\n      setImages(data.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleImageClick = (image) => {\n    setSelectedImage(image);\n    setSelectedLabels([]);\n  };\n\n  const handleLabelToggle = (label) => {\n    const updatedSelectedLabels = selectedLabels.includes(label)\n      ? selectedLabels.filter((selectedLabel) => selectedLabel !== label)\n      : [...selectedLabels, label];\n\n    setSelectedLabels(updatedSelectedLabels);\n  };\n\n  const handleDoneClick = () => {\n    // Perform logic to save selected labels for the selected image\n    console.log('Selected Labels:', selectedLabels);\n  };\n\n  const handleResetClick = () => {\n    setSelectedLabels([]);\n  };\n\n  return (\n    <div className=\"image-annotation-container\">\n      <div className=\"image-list\">\n        {images.map((image) => (\n          <div\n            key={image.imageID}\n            className={`image-thumbnail ${selectedImage && selectedImage.imageID === image.imageID ? 'selected' : ''}`}\n            onClick={() => handleImageClick(image)}\n          >\n            <img src={`data:image/jpeg;base64,${image.imageThumbnail}`} alt={`Image ${image.imageID}`} />\n          </div>\n        ))}\n      </div>\n      <div className=\"annotation-section\">\n        {selectedImage && (\n          <div className=\"selected-image\">\n            <img src={`data:image/jpeg;base64,${selectedImage.imageThumbnail}`} alt={`Selected Image`} />\n          </div>\n        )}\n        <div className=\"label-section\">\n          <h3>Labels</h3>\n          {labels.map((label) => (\n            <div\n              key={label.id}\n              className={`label ${selectedLabels.includes(label) ? 'selected' : ''}`}\n              onClick={() => handleLabelToggle(label)}\n            >\n              {label.name}\n            </div>\n          ))}\n        </div>\n        <div className=\"button-section\">\n          <button className=\"done-button\" onClick={handleDoneClick}>Done</button>\n          <button className=\"reset-button\" onClick={handleResetClick}>Reset</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageAnnotation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
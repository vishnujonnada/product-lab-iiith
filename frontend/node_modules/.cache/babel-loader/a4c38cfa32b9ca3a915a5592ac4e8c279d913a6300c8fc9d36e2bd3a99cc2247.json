{"ast":null,"code":"var _jsxFileName = \"/home/vishnapanyala/Desktop/myapp/src/components/annotate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Stage, Layer, Image, Rect, Transformer } from 'react-konva';\nimport useImage from 'use-image';\nimport { FaTrash } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnnotateImage = _ref => {\n  _s();\n  let {\n    imageUrl\n  } = _ref;\n  const [image] = useImage(imageUrl);\n  const [rectangles, setRectangles] = useState([]);\n  const [selectedRectIndex, setSelectedRectIndex] = useState(null);\n  const [rectangleTexts, setRectangleTexts] = useState([]);\n  const transformerRef = useRef();\n  const handleMouseDown = e => {\n    if (e.target === e.target.getStage()) {\n      setSelectedRectIndex(null);\n      return;\n    }\n    const clickedOnTransformer = e.target.getParent().className === 'Transformer';\n    if (clickedOnTransformer) return;\n    const x = e.evt.offsetX;\n    const y = e.evt.offsetY;\n    const rect = {\n      x,\n      y,\n      width: 0,\n      height: 0\n    };\n    setRectangles([...rectangles, rect]);\n    setRectangleTexts([...rectangleTexts, '']);\n    setSelectedRectIndex(rectangles.length);\n  };\n  const handleTextChange = (e, index) => {\n    const newRectangleTexts = [...rectangleTexts];\n    newRectangleTexts[index] = e.target.value;\n    setRectangleTexts(newRectangleTexts);\n  };\n  const handleDeleteBox = index => {\n    const newRectangles = [...rectangles];\n    newRectangles.splice(index, 1);\n    setRectangles(newRectangles);\n    const newRectangleTexts = [...rectangleTexts];\n    newRectangleTexts.splice(index, 1);\n    setRectangleTexts(newRectangleTexts);\n    if (index === selectedRectIndex) setSelectedRectIndex(null);\n  };\n  const handleRectChange = (index, newProps) => {\n    const newRectangles = [...rectangles];\n    newRectangles[index] = {\n      ...newRectangles[index],\n      ...newProps\n    };\n    setRectangles(newRectangles);\n  };\n  const handleRectDragEnd = (index, e) => {\n    handleRectChange(index, {\n      x: e.target.x(),\n      y: e.target.y()\n    });\n  };\n  const handleRectTransform = (index, newProps) => {\n    handleRectChange(index, {\n      x: newProps.x,\n      y: newProps.y,\n      width: newProps.width,\n      height: newProps.height\n    });\n  };\n  const handleRectSelect = index => {\n    setSelectedRectIndex(index);\n    transformerRef.current.nodes([index]);\n  };\n  return /*#__PURE__*/_jsxDEV(Stage, {\n    width: window.innerWidth,\n    height: window.innerHeight,\n    onMouseDown: handleMouseDown,\n    children: /*#__PURE__*/_jsxDEV(Layer, {\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        image: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), rectangles.map((rect, i) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Rect, {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height,\n          stroke: \"red\",\n          strokeWidth: 2,\n          draggable: true,\n          onDragEnd: e => handleRectDragEnd(i, e),\n          onClick: () => handleRectSelect(i),\n          onTap: () => handleRectSelect(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: rectangleTexts[i],\n          onChange: e => handleTextChange(e, i),\n          style: {\n            position: 'absolute',\n            left: rect.x,\n            top: rect.y - 25,\n            width: rect.width\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), selectedRectIndex === i && /*#__PURE__*/_jsxDEV(FaTrash, {\n          className: \"delete-icon\",\n          onClick: () => handleDeleteBox(i),\n          style: {\n            position: 'absolute',\n            left: rect.x + rect.width - 20,\n            top: rect.y - 20\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this), selectedRectIndex === i && /*#__PURE__*/_jsxDEV(Transformer, {\n          ref: transformerRef,\n          enabledAnchors: ['top-left', 'top-right', 'bottom-left', 'bottom-right'],\n          boundBoxFunc: (oldBox, newBox) => {\n            // Limit the minimum size of the rectangle\n            if (newBox.width < 10 || newBox.height < 10) return oldBox;\n            return newBox;\n          },\n          onTransformEnd: e => {\n            const node = transformerRef.current;\n            const scaleX = node.scaleX();\n            const scaleY = node.scaleY();\n            // Update the rectangle properties after transformation\n            const width = Math.max(10, node.width() * scaleX);\n            const height = Math.max(10, node.height() * scaleY);\n            const x = node.x();\n            const y = node.y();\n            handleRectTransform(i, {\n              x,\n              y,\n              width,\n              height\n            });\n\n            // Reset the transformer's scale to maintain consistent resizing\n            node.scaleX(1);\n            node.scaleY(1);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(AnnotateImage, \"qkCZVW6x7NrhgF4+akUkD8fIAYk=\", false, function () {\n  return [useImage];\n});\n_c = AnnotateImage;\nexport default AnnotateImage;\nvar _c;\n$RefreshReg$(_c, \"AnnotateImage\");","map":{"version":3,"names":["React","useState","useRef","Stage","Layer","Image","Rect","Transformer","useImage","FaTrash","jsxDEV","_jsxDEV","AnnotateImage","_ref","_s","imageUrl","image","rectangles","setRectangles","selectedRectIndex","setSelectedRectIndex","rectangleTexts","setRectangleTexts","transformerRef","handleMouseDown","e","target","getStage","clickedOnTransformer","getParent","className","x","evt","offsetX","y","offsetY","rect","width","height","length","handleTextChange","index","newRectangleTexts","value","handleDeleteBox","newRectangles","splice","handleRectChange","newProps","handleRectDragEnd","handleRectTransform","handleRectSelect","current","nodes","window","innerWidth","innerHeight","onMouseDown","children","fileName","_jsxFileName","lineNumber","columnNumber","map","i","Fragment","stroke","strokeWidth","draggable","onDragEnd","onClick","onTap","type","onChange","style","position","left","top","ref","enabledAnchors","boundBoxFunc","oldBox","newBox","onTransformEnd","node","scaleX","scaleY","Math","max","_c","$RefreshReg$"],"sources":["/home/vishnapanyala/Desktop/myapp/src/components/annotate.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Stage, Layer, Image, Rect, Transformer } from 'react-konva';\nimport useImage from 'use-image';\nimport { FaTrash } from 'react-icons/fa';\n\nconst AnnotateImage = ({ imageUrl }) => {\n  const [image] = useImage(imageUrl);\n  const [rectangles, setRectangles] = useState([]);\n  const [selectedRectIndex, setSelectedRectIndex] = useState(null);\n  const [rectangleTexts, setRectangleTexts] = useState([]);\n  const transformerRef = useRef();\n\n  const handleMouseDown = (e) => {\n    if (e.target === e.target.getStage()) {\n      setSelectedRectIndex(null);\n      return;\n    }\n    const clickedOnTransformer =\n      e.target.getParent().className === 'Transformer';\n    if (clickedOnTransformer) return;\n\n    const x = e.evt.offsetX;\n    const y = e.evt.offsetY;\n    const rect = { x, y, width: 0, height: 0 };\n    setRectangles([...rectangles, rect]);\n    setRectangleTexts([...rectangleTexts, '']);\n    setSelectedRectIndex(rectangles.length);\n  };\n\n  const handleTextChange = (e, index) => {\n    const newRectangleTexts = [...rectangleTexts];\n    newRectangleTexts[index] = e.target.value;\n    setRectangleTexts(newRectangleTexts);\n  };\n\n  const handleDeleteBox = (index) => {\n    const newRectangles = [...rectangles];\n    newRectangles.splice(index, 1);\n    setRectangles(newRectangles);\n\n    const newRectangleTexts = [...rectangleTexts];\n    newRectangleTexts.splice(index, 1);\n    setRectangleTexts(newRectangleTexts);\n\n    if (index === selectedRectIndex) setSelectedRectIndex(null);\n  };\n\n  const handleRectChange = (index, newProps) => {\n    const newRectangles = [...rectangles];\n    newRectangles[index] = { ...newRectangles[index], ...newProps };\n    setRectangles(newRectangles);\n  };\n\n  const handleRectDragEnd = (index, e) => {\n    handleRectChange(index, {\n      x: e.target.x(),\n      y: e.target.y(),\n    });\n  };\n\n  const handleRectTransform = (index, newProps) => {\n    handleRectChange(index, {\n      x: newProps.x,\n      y: newProps.y,\n      width: newProps.width,\n      height: newProps.height,\n    });\n  };\n\n  const handleRectSelect = (index) => {\n    setSelectedRectIndex(index);\n    transformerRef.current.nodes([index]);\n  };\n\n  return (\n    <Stage\n      width={window.innerWidth}\n      height={window.innerHeight}\n      onMouseDown={handleMouseDown}\n    >\n      <Layer>\n        <Image image={image} />\n        {rectangles.map((rect, i) => (\n          <React.Fragment key={i}>\n            <Rect\n              x={rect.x}\n              y={rect.y}\n              width={rect.width}\n              height={rect.height}\n              stroke=\"red\"\n              strokeWidth={2}\n              draggable\n              onDragEnd={(e) => handleRectDragEnd(i, e)}\n              onClick={() => handleRectSelect(i)}\n              onTap={() => handleRectSelect(i)}\n            />\n            <input\n              type=\"text\"\n             \n              value={rectangleTexts[i]}\n              onChange={(e) => handleTextChange(e, i)}\n              style={{\n              position: 'absolute',\n              left: rect.x,\n              top: rect.y - 25,\n              width: rect.width,\n              }}\n              />\n              {selectedRectIndex === i && (\n              <FaTrash\n              className=\"delete-icon\"\n              onClick={() => handleDeleteBox(i)}\n              style={{ position: 'absolute', left: rect.x + rect.width - 20, top: rect.y - 20 }}\n              />\n              )}\n              {selectedRectIndex === i && (\n              <Transformer\n              ref={transformerRef}\n              enabledAnchors={['top-left', 'top-right', 'bottom-left', 'bottom-right']}\n              boundBoxFunc={(oldBox, newBox) => {\n              // Limit the minimum size of the rectangle\n              if (newBox.width < 10 || newBox.height < 10) return oldBox;\n              return newBox;\n              }}\n              onTransformEnd={(e) => {\n              const node = transformerRef.current;\n              const scaleX = node.scaleX();\n              const scaleY = node.scaleY();\n              // Update the rectangle properties after transformation\n              const width = Math.max(10, node.width() * scaleX);\n              const height = Math.max(10, node.height() * scaleY);\n              const x = node.x();\n              const y = node.y();\n\n              handleRectTransform(i, { x, y, width, height });\n\n              // Reset the transformer's scale to maintain consistent resizing\n              node.scaleX(1);\n              node.scaleY(1);\n            }}\n          />\n        )}\n      </React.Fragment>\n    ))}\n  </Layer>\n</Stage>\n);\n};\n\nexport default AnnotateImage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,SAASC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,WAAW,QAAQ,aAAa;AACpE,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,OAAO,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,aAAa,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACjC,MAAM,CAACG,KAAK,CAAC,GAAGR,QAAQ,CAACO,QAAQ,CAAC;EAClC,MAAM,CAACE,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMsB,cAAc,GAAGrB,MAAM,CAAC,CAAC;EAE/B,MAAMsB,eAAe,GAAIC,CAAC,IAAK;IAC7B,IAAIA,CAAC,CAACC,MAAM,KAAKD,CAAC,CAACC,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAE;MACpCP,oBAAoB,CAAC,IAAI,CAAC;MAC1B;IACF;IACA,MAAMQ,oBAAoB,GACxBH,CAAC,CAACC,MAAM,CAACG,SAAS,CAAC,CAAC,CAACC,SAAS,KAAK,aAAa;IAClD,IAAIF,oBAAoB,EAAE;IAE1B,MAAMG,CAAC,GAAGN,CAAC,CAACO,GAAG,CAACC,OAAO;IACvB,MAAMC,CAAC,GAAGT,CAAC,CAACO,GAAG,CAACG,OAAO;IACvB,MAAMC,IAAI,GAAG;MAAEL,CAAC;MAAEG,CAAC;MAAEG,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC;IAC1CpB,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAEmB,IAAI,CAAC,CAAC;IACpCd,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAE,EAAE,CAAC,CAAC;IAC1CD,oBAAoB,CAACH,UAAU,CAACsB,MAAM,CAAC;EACzC,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAACf,CAAC,EAAEgB,KAAK,KAAK;IACrC,MAAMC,iBAAiB,GAAG,CAAC,GAAGrB,cAAc,CAAC;IAC7CqB,iBAAiB,CAACD,KAAK,CAAC,GAAGhB,CAAC,CAACC,MAAM,CAACiB,KAAK;IACzCrB,iBAAiB,CAACoB,iBAAiB,CAAC;EACtC,CAAC;EAED,MAAME,eAAe,GAAIH,KAAK,IAAK;IACjC,MAAMI,aAAa,GAAG,CAAC,GAAG5B,UAAU,CAAC;IACrC4B,aAAa,CAACC,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;IAC9BvB,aAAa,CAAC2B,aAAa,CAAC;IAE5B,MAAMH,iBAAiB,GAAG,CAAC,GAAGrB,cAAc,CAAC;IAC7CqB,iBAAiB,CAACI,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;IAClCnB,iBAAiB,CAACoB,iBAAiB,CAAC;IAEpC,IAAID,KAAK,KAAKtB,iBAAiB,EAAEC,oBAAoB,CAAC,IAAI,CAAC;EAC7D,CAAC;EAED,MAAM2B,gBAAgB,GAAGA,CAACN,KAAK,EAAEO,QAAQ,KAAK;IAC5C,MAAMH,aAAa,GAAG,CAAC,GAAG5B,UAAU,CAAC;IACrC4B,aAAa,CAACJ,KAAK,CAAC,GAAG;MAAE,GAAGI,aAAa,CAACJ,KAAK,CAAC;MAAE,GAAGO;IAAS,CAAC;IAC/D9B,aAAa,CAAC2B,aAAa,CAAC;EAC9B,CAAC;EAED,MAAMI,iBAAiB,GAAGA,CAACR,KAAK,EAAEhB,CAAC,KAAK;IACtCsB,gBAAgB,CAACN,KAAK,EAAE;MACtBV,CAAC,EAAEN,CAAC,CAACC,MAAM,CAACK,CAAC,CAAC,CAAC;MACfG,CAAC,EAAET,CAAC,CAACC,MAAM,CAACQ,CAAC,CAAC;IAChB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMgB,mBAAmB,GAAGA,CAACT,KAAK,EAAEO,QAAQ,KAAK;IAC/CD,gBAAgB,CAACN,KAAK,EAAE;MACtBV,CAAC,EAAEiB,QAAQ,CAACjB,CAAC;MACbG,CAAC,EAAEc,QAAQ,CAACd,CAAC;MACbG,KAAK,EAAEW,QAAQ,CAACX,KAAK;MACrBC,MAAM,EAAEU,QAAQ,CAACV;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMa,gBAAgB,GAAIV,KAAK,IAAK;IAClCrB,oBAAoB,CAACqB,KAAK,CAAC;IAC3BlB,cAAc,CAAC6B,OAAO,CAACC,KAAK,CAAC,CAACZ,KAAK,CAAC,CAAC;EACvC,CAAC;EAED,oBACE9B,OAAA,CAACR,KAAK;IACJkC,KAAK,EAAEiB,MAAM,CAACC,UAAW;IACzBjB,MAAM,EAAEgB,MAAM,CAACE,WAAY;IAC3BC,WAAW,EAAEjC,eAAgB;IAAAkC,QAAA,eAE7B/C,OAAA,CAACP,KAAK;MAAAsD,QAAA,gBACJ/C,OAAA,CAACN,KAAK;QAACW,KAAK,EAAEA;MAAM;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACtB7C,UAAU,CAAC8C,GAAG,CAAC,CAAC3B,IAAI,EAAE4B,CAAC,kBACtBrD,OAAA,CAACX,KAAK,CAACiE,QAAQ;QAAAP,QAAA,gBACb/C,OAAA,CAACL,IAAI;UACHyB,CAAC,EAAEK,IAAI,CAACL,CAAE;UACVG,CAAC,EAAEE,IAAI,CAACF,CAAE;UACVG,KAAK,EAAED,IAAI,CAACC,KAAM;UAClBC,MAAM,EAAEF,IAAI,CAACE,MAAO;UACpB4B,MAAM,EAAC,KAAK;UACZC,WAAW,EAAE,CAAE;UACfC,SAAS;UACTC,SAAS,EAAG5C,CAAC,IAAKwB,iBAAiB,CAACe,CAAC,EAAEvC,CAAC,CAAE;UAC1C6C,OAAO,EAAEA,CAAA,KAAMnB,gBAAgB,CAACa,CAAC,CAAE;UACnCO,KAAK,EAAEA,CAAA,KAAMpB,gBAAgB,CAACa,CAAC;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eACFnD,OAAA;UACE6D,IAAI,EAAC,MAAM;UAEX7B,KAAK,EAAEtB,cAAc,CAAC2C,CAAC,CAAE;UACzBS,QAAQ,EAAGhD,CAAC,IAAKe,gBAAgB,CAACf,CAAC,EAAEuC,CAAC,CAAE;UACxCU,KAAK,EAAE;YACPC,QAAQ,EAAE,UAAU;YACpBC,IAAI,EAAExC,IAAI,CAACL,CAAC;YACZ8C,GAAG,EAAEzC,IAAI,CAACF,CAAC,GAAG,EAAE;YAChBG,KAAK,EAAED,IAAI,CAACC;UACZ;QAAE;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,EACD3C,iBAAiB,KAAK6C,CAAC,iBACxBrD,OAAA,CAACF,OAAO;UACRqB,SAAS,EAAC,aAAa;UACvBwC,OAAO,EAAEA,CAAA,KAAM1B,eAAe,CAACoB,CAAC,CAAE;UAClCU,KAAK,EAAE;YAAEC,QAAQ,EAAE,UAAU;YAAEC,IAAI,EAAExC,IAAI,CAACL,CAAC,GAAGK,IAAI,CAACC,KAAK,GAAG,EAAE;YAAEwC,GAAG,EAAEzC,IAAI,CAACF,CAAC,GAAG;UAAG;QAAE;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjF,CACA,EACA3C,iBAAiB,KAAK6C,CAAC,iBACxBrD,OAAA,CAACJ,WAAW;UACZuE,GAAG,EAAEvD,cAAe;UACpBwD,cAAc,EAAE,CAAC,UAAU,EAAE,WAAW,EAAE,aAAa,EAAE,cAAc,CAAE;UACzEC,YAAY,EAAEA,CAACC,MAAM,EAAEC,MAAM,KAAK;YAClC;YACA,IAAIA,MAAM,CAAC7C,KAAK,GAAG,EAAE,IAAI6C,MAAM,CAAC5C,MAAM,GAAG,EAAE,EAAE,OAAO2C,MAAM;YAC1D,OAAOC,MAAM;UACb,CAAE;UACFC,cAAc,EAAG1D,CAAC,IAAK;YACvB,MAAM2D,IAAI,GAAG7D,cAAc,CAAC6B,OAAO;YACnC,MAAMiC,MAAM,GAAGD,IAAI,CAACC,MAAM,CAAC,CAAC;YAC5B,MAAMC,MAAM,GAAGF,IAAI,CAACE,MAAM,CAAC,CAAC;YAC5B;YACA,MAAMjD,KAAK,GAAGkD,IAAI,CAACC,GAAG,CAAC,EAAE,EAAEJ,IAAI,CAAC/C,KAAK,CAAC,CAAC,GAAGgD,MAAM,CAAC;YACjD,MAAM/C,MAAM,GAAGiD,IAAI,CAACC,GAAG,CAAC,EAAE,EAAEJ,IAAI,CAAC9C,MAAM,CAAC,CAAC,GAAGgD,MAAM,CAAC;YACnD,MAAMvD,CAAC,GAAGqD,IAAI,CAACrD,CAAC,CAAC,CAAC;YAClB,MAAMG,CAAC,GAAGkD,IAAI,CAAClD,CAAC,CAAC,CAAC;YAElBgB,mBAAmB,CAACc,CAAC,EAAE;cAAEjC,CAAC;cAAEG,CAAC;cAAEG,KAAK;cAAEC;YAAO,CAAC,CAAC;;YAE/C;YACA8C,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;YACdD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC;UAChB;QAAE;UAAA3B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACF;MAAA,GA1DsBE,CAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA2DV,CACjB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAER,CAAC;AAAChD,EAAA,CA9IIF,aAAa;EAAA,QACDJ,QAAQ;AAAA;AAAAiF,EAAA,GADpB7E,aAAa;AAgJnB,eAAeA,aAAa;AAAC,IAAA6E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
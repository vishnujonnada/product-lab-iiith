{"ast":null,"code":"var _jsxFileName = \"/home/vishnapanyala/Desktop/myapp/src/components/annotate.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { ReactPictureAnnotation } from 'react-picture-annotation';\n\n// const AnnotateImage = ({ image }) => {\n//   const [pageSize, setPageSize] = useState({\n//     width: window.innerWidth,\n//     height: window.innerHeight\n//   });\n//   const [annotations, setAnnotations] = useState([]);\n\n//   const onResize = () => {\n//     setPageSize({ width: window.innerWidth, height: window.innerHeight });\n//   };\n\n//   useEffect(() => {\n//     window.addEventListener('resize', onResize);\n//     return () => window.removeEventListener('resize', onResize);\n//   }, []);\n\n//   const onSelect = (selectedId) => console.log(selectedId);\n\n//   // const onChange = (data) => {\n//   //   setAnnotations(data);\n//   //   // console.log(data);\n//   // };\n\n//   // const handleDeleteBox = (id) => {\n//   //   const updatedAnnotations = annotations.filter((annotation) => annotation.id !== id);\n//   //   setAnnotations(updatedAnnotations);\n//   // };\n\n//   const onChange = (data) => {\n//     setAnnotations(data);\n\n//     const updatedAnnotations = data.map((annotation) => {\n//       const { id, mark } = annotation;\n\n//       return {\n//         id,\n//         label: annotation.comment,\n//         coordinates: mark\n//       };\n//     });\n\n//     console.log('Updated Annotations:', updatedAnnotations);\n\n//   };\n\n//   const handleDeleteBox = (id) => {\n//     const updatedAnnotations = annotations.filter((annotation) => annotation.id !== id);\n//     setAnnotations(updatedAnnotations);\n\n//     console.log('Updated Annotations:', updatedAnnotations);\n//   };\n\n//   return (\n//     <div className=\"AnnotateImage\">\n//       <ReactPictureAnnotation\n//         image={image}\n//         onSelect={onSelect}\n//         onChange={onChange}\n//         width={pageSize.width}\n//         height={pageSize.height}\n//         annotations={annotations}\n//         renderAnnotation={({ annotation }) => (\n//           <div style={{ position: 'absolute', left: annotation.position.x, top: annotation.position.y }}>\n//             <input\n//               type=\"text\"\n//               value={annotation.content}\n//               onChange={(e) => {\n//                 const updatedAnnotations = [...annotations];\n//                 const index = updatedAnnotations.findIndex((a) => a.id === annotation.id);\n//                 updatedAnnotations[index].content = e.target.value;\n//                 setAnnotations(updatedAnnotations);\n//               }}\n//             />\n//             <button onClick={() => handleDeleteBox(annotation.id)}>Delete</button>\n//           </div>\n//         )}\n//       />\n//     </div>\n//   );\n// };\n\n// export default AnnotateImage;\n\n// import React, { useState, useEffect } from 'react';\n// import { ReactPictureAnnotation } from 'react-picture-annotation';\n\n// const AnnotateImage = ({ image, onChangeAnnotations }) => {\n//   const [pageSize, setPageSize] = useState({\n//     width: window.innerWidth,\n//     height: window.innerHeight\n//   });\n//   const [annotations, setAnnotations] = useState([]);\n\n//   const onResize = () => {\n//     setPageSize({ width: window.innerWidth, height: window.innerHeight });\n//   };\n\n// // const onInitialize = () => {\n// //   console.log(\"hi\");\n// //   const data = [{\n// //     \"id\": \"dNktHs\",\n// //     \"mark\": {\n// //         \"x\": 83.8718820861678,\n// //         \"y\": 41.92517006802721,\n// //         \"width\": 47.3922902494331,\n// //         \"height\": 97.27891156462587,\n// //         \"type\": \"RECT\"\n// //     }\n// //   }]\n// //   setAnnotations(data);\n\n// // };\n\n//   useEffect(() => {\n//     window.addEventListener('resize', onResize);\n//     return () => window.removeEventListener('resize', onResize);\n//   }, []);\n\n//   const onSelect = (selectedId) => console.log(selectedId);\n\n//   const onChange = (data) => {\n//     setAnnotations(data);\n//     // console.log(data);\n//     const updatedAnnotations = data.map((annotation) => {\n//       const { id, mark } = annotation;\n\n//       return {\n//         id,\n//         label: annotation.comment,\n//         coordinates: {\n//           x: mark.x,\n//           y: mark.y,\n//           width: mark.width,\n//           height: mark.height\n//         }\n//       };\n//     });\n\n//     console.log('Updated Annotations:', updatedAnnotations);\n//     onChangeAnnotations(updatedAnnotations);\n//   };\n\n//   const handleDeleteBox = (id) => {\n//     const updatedAnnotations = annotations.filter((annotation) => annotation.id !== id);\n//     setAnnotations(updatedAnnotations);\n\n//     console.log('Updated Annotations:', updatedAnnotations);\n//     onChangeAnnotations(updatedAnnotations);\n//   };\n\n//   return (\n//     <div className=\"AnnotateImage\">\n//       <ReactPictureAnnotation\n//         image={image}        \n//         onSelect={onSelect}\n//         onChange={onChange}\n//         width={pageSize.width}\n//         height={pageSize.height}\n//         annotations={annotations}    \n//         renderAnnotation={({ annotation }) => (\n//           <div style={{ position: 'absolute', left: annotation.position.x, top: annotation.position.y }}>\n//             <input\n//               type=\"text\"\n//               value={annotation.content}\n//               onChange={(e) => {\n//                 const updatedAnnotations = [...annotations];\n//                 const index = updatedAnnotations.findIndex((a) => a.id === annotation.id);\n//                 updatedAnnotations[index].content = e.target.value;\n//                 setAnnotations(updatedAnnotations);\n//               }}\n//             />\n//             <button onClick={() => handleDeleteBox(annotation.id)}>Delete</button>\n//           </div>\n//         )}\n//       />\n//     </div>\n//   );\n// };\n\n// export default AnnotateImage;\n\nimport React, { useState, useEffect } from 'react';\nimport { ReactPictureAnnotation } from 'react-picture-annotation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnnotateImage = _ref => {\n  _s();\n  let {\n    image,\n    annotations: initialAnnotations,\n    onChangeAnnotations\n  } = _ref;\n  const [pageSize, setPageSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const [annotations, setAnnotations] = useState([]);\n  useEffect(() => {\n    setAnnotations(initialAnnotations);\n  }, [initialAnnotations]);\n  const onResize = () => {\n    setPageSize({\n      width: window.innerWidth,\n      height: window.innerHeight\n    });\n  };\n  useEffect(() => {\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, []);\n  const onSelect = selectedId => console.log(selectedId);\n  const onChange = data => {\n    setAnnotations(data);\n    const updatedAnnotations = data.map(annotation => {\n      const {\n        id,\n        mark\n      } = annotation;\n      return {\n        id,\n        label: annotation.content,\n        coordinates: {\n          x: mark.x,\n          y: mark.y,\n          width: mark.width,\n          height: mark.height\n        }\n      };\n    });\n    console.log('Updated Annotations:', updatedAnnotations);\n    onChangeAnnotations(updatedAnnotations);\n  };\n  const handleDeleteBox = id => {\n    const updatedAnnotations = annotations.filter(annotation => annotation.id !== id);\n    setAnnotations(updatedAnnotations);\n    console.log('Updated Annotations:', updatedAnnotations);\n    onChangeAnnotations(updatedAnnotations);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AnnotateImage\",\n    children: /*#__PURE__*/_jsxDEV(ReactPictureAnnotation, {\n      image: image,\n      onSelect: onSelect,\n      onChange: onChange,\n      width: pageSize.width,\n      height: pageSize.height,\n      annotations: annotations,\n      renderAnnotation: _ref2 => {\n        let {\n          annotation\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            left: annotation.position.x,\n            top: annotation.position.y\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: annotation.content,\n            onChange: e => {\n              const updatedAnnotations = [...annotations];\n              const index = updatedAnnotations.findIndex(a => a.id === annotation.id);\n              updatedAnnotations[index].content = e.target.value;\n              setAnnotations(updatedAnnotations);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteBox(annotation.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n};\n_s(AnnotateImage, \"kI6IovDjkGzEPeXf5lAWUoI+utc=\");\n_c = AnnotateImage;\nexport default AnnotateImage;\nvar _c;\n$RefreshReg$(_c, \"AnnotateImage\");","map":{"version":3,"names":["React","useState","useEffect","ReactPictureAnnotation","jsxDEV","_jsxDEV","AnnotateImage","_ref","_s","image","annotations","initialAnnotations","onChangeAnnotations","pageSize","setPageSize","width","window","innerWidth","height","innerHeight","setAnnotations","onResize","addEventListener","removeEventListener","onSelect","selectedId","console","log","onChange","data","updatedAnnotations","map","annotation","id","mark","label","content","coordinates","x","y","handleDeleteBox","filter","className","children","renderAnnotation","_ref2","style","position","left","top","type","value","e","index","findIndex","a","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/vishnapanyala/Desktop/myapp/src/components/annotate.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { ReactPictureAnnotation } from 'react-picture-annotation';\n\n// const AnnotateImage = ({ image }) => {\n//   const [pageSize, setPageSize] = useState({\n//     width: window.innerWidth,\n//     height: window.innerHeight\n//   });\n//   const [annotations, setAnnotations] = useState([]);\n\n//   const onResize = () => {\n//     setPageSize({ width: window.innerWidth, height: window.innerHeight });\n//   };\n\n//   useEffect(() => {\n//     window.addEventListener('resize', onResize);\n//     return () => window.removeEventListener('resize', onResize);\n//   }, []);\n\n//   const onSelect = (selectedId) => console.log(selectedId);\n\n//   // const onChange = (data) => {\n//   //   setAnnotations(data);\n//   //   // console.log(data);\n//   // };\n\n//   // const handleDeleteBox = (id) => {\n//   //   const updatedAnnotations = annotations.filter((annotation) => annotation.id !== id);\n//   //   setAnnotations(updatedAnnotations);\n//   // };\n\n//   const onChange = (data) => {\n//     setAnnotations(data);\n  \n//     const updatedAnnotations = data.map((annotation) => {\n//       const { id, mark } = annotation;\n   \n//       return {\n//         id,\n//         label: annotation.comment,\n//         coordinates: mark\n//       };\n//     });\n  \n//     console.log('Updated Annotations:', updatedAnnotations);\n    \n//   };\n  \n//   const handleDeleteBox = (id) => {\n//     const updatedAnnotations = annotations.filter((annotation) => annotation.id !== id);\n//     setAnnotations(updatedAnnotations);\n  \n//     console.log('Updated Annotations:', updatedAnnotations);\n//   };\n  \n  \n\n//   return (\n//     <div className=\"AnnotateImage\">\n//       <ReactPictureAnnotation\n//         image={image}\n//         onSelect={onSelect}\n//         onChange={onChange}\n//         width={pageSize.width}\n//         height={pageSize.height}\n//         annotations={annotations}\n//         renderAnnotation={({ annotation }) => (\n//           <div style={{ position: 'absolute', left: annotation.position.x, top: annotation.position.y }}>\n//             <input\n//               type=\"text\"\n//               value={annotation.content}\n//               onChange={(e) => {\n//                 const updatedAnnotations = [...annotations];\n//                 const index = updatedAnnotations.findIndex((a) => a.id === annotation.id);\n//                 updatedAnnotations[index].content = e.target.value;\n//                 setAnnotations(updatedAnnotations);\n//               }}\n//             />\n//             <button onClick={() => handleDeleteBox(annotation.id)}>Delete</button>\n//           </div>\n//         )}\n//       />\n//     </div>\n//   );\n// };\n\n// export default AnnotateImage;\n\n\n// import React, { useState, useEffect } from 'react';\n// import { ReactPictureAnnotation } from 'react-picture-annotation';\n\n// const AnnotateImage = ({ image, onChangeAnnotations }) => {\n//   const [pageSize, setPageSize] = useState({\n//     width: window.innerWidth,\n//     height: window.innerHeight\n//   });\n//   const [annotations, setAnnotations] = useState([]);\n\n\n//   const onResize = () => {\n//     setPageSize({ width: window.innerWidth, height: window.innerHeight });\n//   };\n\n\n// // const onInitialize = () => {\n// //   console.log(\"hi\");\n// //   const data = [{\n// //     \"id\": \"dNktHs\",\n// //     \"mark\": {\n// //         \"x\": 83.8718820861678,\n// //         \"y\": 41.92517006802721,\n// //         \"width\": 47.3922902494331,\n// //         \"height\": 97.27891156462587,\n// //         \"type\": \"RECT\"\n// //     }\n// //   }]\n// //   setAnnotations(data);\n  \n// // };\n\n//   useEffect(() => {\n//     window.addEventListener('resize', onResize);\n//     return () => window.removeEventListener('resize', onResize);\n//   }, []);\n\n//   const onSelect = (selectedId) => console.log(selectedId);\n\n//   const onChange = (data) => {\n//     setAnnotations(data);\n//     // console.log(data);\n//     const updatedAnnotations = data.map((annotation) => {\n//       const { id, mark } = annotation;\n   \n//       return {\n//         id,\n//         label: annotation.comment,\n//         coordinates: {\n//           x: mark.x,\n//           y: mark.y,\n//           width: mark.width,\n//           height: mark.height\n//         }\n//       };\n//     });\n  \n//     console.log('Updated Annotations:', updatedAnnotations);\n//     onChangeAnnotations(updatedAnnotations);\n//   };\n  \n//   const handleDeleteBox = (id) => {\n//     const updatedAnnotations = annotations.filter((annotation) => annotation.id !== id);\n//     setAnnotations(updatedAnnotations);\n  \n//     console.log('Updated Annotations:', updatedAnnotations);\n//     onChangeAnnotations(updatedAnnotations);\n//   };\n\n  \n//   return (\n//     <div className=\"AnnotateImage\">\n//       <ReactPictureAnnotation\n//         image={image}        \n//         onSelect={onSelect}\n//         onChange={onChange}\n//         width={pageSize.width}\n//         height={pageSize.height}\n//         annotations={annotations}    \n//         renderAnnotation={({ annotation }) => (\n//           <div style={{ position: 'absolute', left: annotation.position.x, top: annotation.position.y }}>\n//             <input\n//               type=\"text\"\n//               value={annotation.content}\n//               onChange={(e) => {\n//                 const updatedAnnotations = [...annotations];\n//                 const index = updatedAnnotations.findIndex((a) => a.id === annotation.id);\n//                 updatedAnnotations[index].content = e.target.value;\n//                 setAnnotations(updatedAnnotations);\n//               }}\n//             />\n//             <button onClick={() => handleDeleteBox(annotation.id)}>Delete</button>\n//           </div>\n//         )}\n//       />\n//     </div>\n//   );\n// };\n\n// export default AnnotateImage;\n\n\nimport React, { useState, useEffect } from 'react';\nimport { ReactPictureAnnotation } from 'react-picture-annotation';\n\nconst AnnotateImage = ({ image, annotations: initialAnnotations, onChangeAnnotations }) => {\n  const [pageSize, setPageSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const [annotations, setAnnotations] = useState([]);\n\n  useEffect(() => {\n    setAnnotations(initialAnnotations);\n  }, [initialAnnotations]);\n\n  const onResize = () => {\n    setPageSize({ width: window.innerWidth, height: window.innerHeight });\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, []);\n\n  const onSelect = (selectedId) => console.log(selectedId);\n\n  const onChange = (data) => {\n    setAnnotations(data);\n    const updatedAnnotations = data.map((annotation) => {\n      const { id, mark } = annotation;\n\n      return {\n        id,\n        label: annotation.content,\n        coordinates: {\n          x: mark.x,\n          y: mark.y,\n          width: mark.width,\n          height: mark.height\n        }\n      };\n    });\n\n    console.log('Updated Annotations:', updatedAnnotations);\n    onChangeAnnotations(updatedAnnotations);\n  };\n\n  const handleDeleteBox = (id) => {\n    const updatedAnnotations = annotations.filter((annotation) => annotation.id !== id);\n    setAnnotations(updatedAnnotations);\n\n    console.log('Updated Annotations:', updatedAnnotations);\n    onChangeAnnotations(updatedAnnotations);\n  };\n\n  return (\n    <div className=\"AnnotateImage\">\n      <ReactPictureAnnotation\n        image={image}\n        onSelect={onSelect}\n        onChange={onChange}\n        width={pageSize.width}\n        height={pageSize.height}\n        annotations={annotations}\n        renderAnnotation={({ annotation }) => (\n          <div style={{ position: 'absolute', left: annotation.position.x, top: annotation.position.y }}>\n            <input\n              type=\"text\"\n              value={annotation.content}\n              onChange={(e) => {\n                const updatedAnnotations = [...annotations];\n                const index = updatedAnnotations.findIndex((a) => a.id === annotation.id);\n                updatedAnnotations[index].content = e.target.value;\n                setAnnotations(updatedAnnotations);\n              }}\n            />\n            <button onClick={() => handleDeleteBox(annotation.id)}>Delete</button>\n          </div>\n        )}\n      />\n    </div>\n  );\n};\n\nexport default AnnotateImage;\n\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,sBAAsB,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,aAAa,GAAGC,IAAA,IAAqE;EAAAC,EAAA;EAAA,IAApE;IAAEC,KAAK;IAAEC,WAAW,EAAEC,kBAAkB;IAAEC;EAAoB,CAAC,GAAAL,IAAA;EACpF,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC;IACvCc,KAAK,EAAEC,MAAM,CAACC,UAAU;IACxBC,MAAM,EAAEF,MAAM,CAACG;EACjB,CAAC,CAAC;EACF,MAAM,CAACT,WAAW,EAAEU,cAAc,CAAC,GAA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/vishnapanyala/Desktop/myapp/src/components/PrivateRoutes.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { Outlet, Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoutes = () => {\n  _s();\n  useEffect(() => {\n    const userEmail = localStorage.getItem('userEmail');\n    // Add your authentication logic here to check if the userEmail is valid\n    const isValidUser = userEmail !== null && userEmail !== '';\n    console.log(userEmail);\n    console.log(isValidUser);\n\n    // Redirect to the login page if the user is not valid\n    if (!isValidUser) {\n      // You can replace '/login' with the appropriate login route in your application\n      // You may also pass state or query parameters to the login route if needed\n      Navigate('/login');\n    }\n  }, []);\n  if (isValidUser) {\n    return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n};\n_s(PrivateRoutes, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = PrivateRoutes;\nexport default PrivateRoutes;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoutes\");","map":{"version":3,"names":["useEffect","Outlet","Navigate","jsxDEV","_jsxDEV","PrivateRoutes","_s","userEmail","localStorage","getItem","isValidUser","console","log","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/home/vishnapanyala/Desktop/myapp/src/components/PrivateRoutes.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { Outlet, Navigate } from 'react-router-dom';\n\nconst PrivateRoutes = () => {\n  useEffect(() => {\n    const userEmail = localStorage.getItem('userEmail');\n    // Add your authentication logic here to check if the userEmail is valid\n    const isValidUser = userEmail !== null && userEmail !== '';\n    console.log(userEmail);\n    console.log(isValidUser);\n\n    // Redirect to the login page if the user is not valid\n    if (!isValidUser) {\n      // You can replace '/login' with the appropriate login route in your application\n      // You may also pass state or query parameters to the login route if needed\n      Navigate('/login');\n    }\n  }, []);\n\n  if (isValidUser) {\n    return <Outlet />;\n  } else {\n    return <Navigate to=\"/login\" />;\n  }\n};\n\nexport default PrivateRoutes;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,MAAM,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1BN,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACnD;IACA,MAAMC,WAAW,GAAGH,SAAS,KAAK,IAAI,IAAIA,SAAS,KAAK,EAAE;IAC1DI,OAAO,CAACC,GAAG,CAACL,SAAS,CAAC;IACtBI,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC;;IAExB;IACA,IAAI,CAACA,WAAW,EAAE;MAChB;MACA;MACAR,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIQ,WAAW,EAAE;IACf,oBAAON,OAAA,CAACH,MAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnB,CAAC,MAAM;IACL,oBAAOZ,OAAA,CAACF,QAAQ;MAACe,EAAE,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;AACF,CAAC;AAACV,EAAA,CArBID,aAAa;AAAAa,EAAA,GAAbb,aAAa;AAuBnB,eAAeA,aAAa;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
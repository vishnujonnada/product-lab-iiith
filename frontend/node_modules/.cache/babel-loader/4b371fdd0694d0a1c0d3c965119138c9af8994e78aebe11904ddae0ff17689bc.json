{"ast":null,"code":"var _jsxFileName = \"/home/vishnapanyala/Desktop/myapp/src/components/upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadImages = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [label, setLabel] = useState('');\n  const handleImageUpload = event => {\n    const selectedImages = Array.from(event.target.files);\n    setImages(selectedImages);\n  };\n  const handleLabelChange = event => {\n    setLabel(event.target.value);\n  };\n  const handleSubmit = () => {\n    // Perform the upload logic here\n    // You can access the selected images using the 'images' state\n    // and the label using the 'label' state\n    // You can use libraries like Axios or fetch to send the data to a server endpoint\n    // Implement the server-side logic to handle the uploaded images and label\n    console.log('Uploaded images:', images);\n    console.log('Label:', label);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: handleImageUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"label\",\n      children: \"Label:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"label\",\n      value: label,\n      onChange: handleLabelChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadImages, \"Ni4Oj/KOjlPosQQy8D8WOdj70QM=\");\n_c = UploadImages;\nexport default UploadImages;\nvar _c;\n$RefreshReg$(_c, \"UploadImages\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadImages","_s","images","setImages","label","setLabel","handleImageUpload","event","selectedImages","Array","from","target","files","handleLabelChange","value","handleSubmit","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","multiple","onChange","htmlFor","id","onClick","_c","$RefreshReg$"],"sources":["/home/vishnapanyala/Desktop/myapp/src/components/upload.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst UploadImages = () => {\n  const [images, setImages] = useState([]);\n  const [label, setLabel] = useState('');\n\n  const handleImageUpload = (event) => {\n    const selectedImages = Array.from(event.target.files);\n    setImages(selectedImages);\n  };\n\n  const handleLabelChange = (event) => {\n    setLabel(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    // Perform the upload logic here\n    // You can access the selected images using the 'images' state\n    // and the label using the 'label' state\n    // You can use libraries like Axios or fetch to send the data to a server endpoint\n    // Implement the server-side logic to handle the uploaded images and label\n    console.log('Uploaded images:', images);\n    console.log('Label:', label);\n  };\n\n  return (\n    <div>\n      <h1>Upload Images</h1>\n      <input type=\"file\" multiple onChange={handleImageUpload} />\n\n      <label htmlFor=\"label\">Label:</label>\n      <input type=\"text\" id=\"label\" value={label} onChange={handleLabelChange} />\n\n      <button onClick={handleSubmit}>Upload</button>\n    </div>\n  );\n};\n\nexport default UploadImages;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,cAAc,GAAGC,KAAK,CAACC,IAAI,CAACH,KAAK,CAACI,MAAM,CAACC,KAAK,CAAC;IACrDT,SAAS,CAACK,cAAc,CAAC;EAC3B,CAAC;EAED,MAAMK,iBAAiB,GAAIN,KAAK,IAAK;IACnCF,QAAQ,CAACE,KAAK,CAACI,MAAM,CAACG,KAAK,CAAC;EAC9B,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA;IACA;IACA;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEf,MAAM,CAAC;IACvCc,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEb,KAAK,CAAC;EAC9B,CAAC;EAED,oBACEL,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBvB,OAAA;MAAOwB,IAAI,EAAC,MAAM;MAACC,QAAQ;MAACC,QAAQ,EAAEnB;IAAkB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE3DvB,OAAA;MAAO2B,OAAO,EAAC,OAAO;MAAAR,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACrCvB,OAAA;MAAOwB,IAAI,EAAC,MAAM;MAACI,EAAE,EAAC,OAAO;MAACb,KAAK,EAAEV,KAAM;MAACqB,QAAQ,EAAEZ;IAAkB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE3EvB,OAAA;MAAQ6B,OAAO,EAAEb,YAAa;MAAAG,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAACrB,EAAA,CAlCID,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAoClB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
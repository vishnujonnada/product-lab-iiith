{"ast":null,"code":"import React from 'react';\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\nvar css_248z = \"/* .rus {\\n  --theme-color: hsl(262, 24%, 84%);\\n  --theme-background: hsl(262, 25%, 98%);\\n\\n  position: relative;\\n  padding: 10px;\\n  font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto,\\n    Oxygen-Sans, Ubuntu, Cantarell, \\\"Helvetica Neue\\\", Helvetica, Arial,\\n    sans-serif;\\n  background-color: var(--theme-background);\\n  border: 1px dashed var(--theme-color);\\n  border-radius: 5px;\\n  cursor: pointer;\\n} */\\n\\n.rp-stage {\\n  position: relative;\\n  font-family: -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto,\\n    Oxygen-Sans, Ubuntu, Cantarell, \\\"Helvetica Neue\\\", Helvetica, Arial,\\n    sans-serif;\\n}\\n\\n.rp-image {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  overflow: hidden;\\n}\\n\\n.rp-shapes {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n}\\n\\n.rp-selected-input {\\n  position: absolute;\\n}\\n\\n.rp-delete {\\n  width: 20px;\\n  height: 20px;\\n  fill: white;\\n}\\n\\n.rp-delete-section {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.rp-default-input-section {\\n  display: flex;\\n  align-items: stretch;\\n  background-color: #3384ff;\\n  border: none;\\n  border-radius: 5px;\\n}\\n\\n.rp-default-input-section input {\\n  padding: 10px;\\n  color: white;\\n  background: transparent;\\n  border: 0;\\n  outline: none;\\n}\\n\\n.rp-default-input-section input::placeholder {\\n  color: #94bfff;\\n}\\n\\n.rp-default-input-section a {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 35px;\\n  color: white;\\n  font-size: 12px;\\n  background-color: #3b5bdb;\\n  border-radius: 0 5px 5px 0;\\n  cursor: pointer;\\n  transition: background-color 0.5s, color 0.5s;\\n}\\n\\n.rp-default-input-section a:hover,\\n.rp-default-input-section a:active {\\n  color: #3384ff;\\n  background-color: #5c7cfa;\\n}\\n\";\nstyleInject(css_248z);\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function () {};\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (e) {\n          throw e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function () {\n      it = o[Symbol.iterator]();\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (e) {\n      didErr = true;\n      err = e;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nvar defaultShapeStyle = {\n  padding: 5,\n  lineWidth: 2,\n  shadowBlur: 10,\n  fontSize: 12,\n  fontColor: \"#212529\",\n  fontBackground: \"#f8f9fa\",\n  fontFamily: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', Helvetica, Arial, sans-serif\",\n  shapeBackground: \"hsla(210, 16%, 93%, 0.2)\",\n  shapeStrokeStyle: \"#f8f9fa\",\n  shapeShadowStyle: \"hsla(210, 9%, 31%, 0.35)\",\n  transformerBackground: \"#5c7cfa\",\n  transformerSize: 10\n};\nvar RectShape = function RectShape(_data, onChange) {\n  var _this = this;\n  var shapeStyle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultShapeStyle;\n  _classCallCheck(this, RectShape);\n  this.annotationData = void 0;\n  this.onChangeCallBack = void 0;\n  this.dragStartOffset = void 0;\n  this.shapeStyle = void 0;\n  this.onDragStart = function (positionX, positionY) {\n    var _this$annotationData$ = _this.annotationData.mark,\n      x = _this$annotationData$.x,\n      y = _this$annotationData$.y;\n    _this.dragStartOffset = {\n      offsetX: positionX - x,\n      offsetY: positionY - y\n    };\n  };\n  this.onDrag = function (positionX, positionY) {\n    _this.annotationData.mark.x = positionX - _this.dragStartOffset.offsetX;\n    _this.annotationData.mark.y = positionY - _this.dragStartOffset.offsetY;\n    _this.onChangeCallBack();\n  };\n  this.checkBoundary = function (positionX, positionY) {\n    var _this$annotationData$2 = _this.annotationData.mark,\n      x = _this$annotationData$2.x,\n      y = _this$annotationData$2.y,\n      width = _this$annotationData$2.width,\n      height = _this$annotationData$2.height;\n    return (positionX > x && positionX < x + width || positionX < x && positionX > x + width) && (positionY > y && positionY < y + height || positionY < y && positionY > y + height);\n  };\n  this.paint = function (canvas2D, calculateTruePosition, selected) {\n    var _calculateTruePositio = calculateTruePosition(_this.annotationData.mark),\n      x = _calculateTruePositio.x,\n      y = _calculateTruePositio.y,\n      width = _calculateTruePositio.width,\n      height = _calculateTruePositio.height;\n    canvas2D.save();\n    var _this$shapeStyle = _this.shapeStyle,\n      padding = _this$shapeStyle.padding,\n      lineWidth = _this$shapeStyle.lineWidth,\n      shadowBlur = _this$shapeStyle.shadowBlur,\n      fontSize = _this$shapeStyle.fontSize,\n      fontColor = _this$shapeStyle.fontColor,\n      fontBackground = _this$shapeStyle.fontBackground,\n      fontFamily = _this$shapeStyle.fontFamily,\n      shapeBackground = _this$shapeStyle.shapeBackground,\n      shapeStrokeStyle = _this$shapeStyle.shapeStrokeStyle,\n      shapeShadowStyle = _this$shapeStyle.shapeShadowStyle;\n    canvas2D.shadowBlur = shadowBlur;\n    canvas2D.shadowColor = shapeShadowStyle;\n    canvas2D.strokeStyle = shapeStrokeStyle;\n    canvas2D.lineWidth = lineWidth;\n    canvas2D.strokeRect(x, y, width, height);\n    canvas2D.restore();\n    if (selected) {\n      canvas2D.fillStyle = shapeBackground;\n      canvas2D.fillRect(x, y, width, height);\n    } else {\n      var _comment = _this.annotationData.comment;\n      if (_comment) {\n        canvas2D.font = \"\".concat(fontSize, \"px \").concat(fontFamily);\n        var metrics = canvas2D.measureText(_comment);\n        canvas2D.save();\n        canvas2D.fillStyle = fontBackground;\n        canvas2D.fillRect(x, y, metrics.width + padding * 2, fontSize + padding * 2);\n        canvas2D.textBaseline = \"top\";\n        canvas2D.fillStyle = fontColor;\n        canvas2D.fillText(_comment, x + padding, y + padding);\n      }\n    }\n    canvas2D.restore();\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  };\n  this.adjustMark = function (_ref) {\n    var _ref$x = _ref.x,\n      x = _ref$x === void 0 ? _this.annotationData.mark.x : _ref$x,\n      _ref$y = _ref.y,\n      y = _ref$y === void 0 ? _this.annotationData.mark.y : _ref$y,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? _this.annotationData.mark.width : _ref$width,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? _this.annotationData.mark.height : _ref$height;\n    _this.annotationData.mark.x = x;\n    _this.annotationData.mark.y = y;\n    _this.annotationData.mark.width = width;\n    _this.annotationData.mark.height = height;\n    _this.onChangeCallBack();\n  };\n  this.getAnnotationData = function () {\n    return _this.annotationData;\n  };\n  this.setComment = function (comment) {\n    _this.annotationData.comment = comment;\n  };\n  this.equal = function (data) {\n    return data.id === _this.annotationData.id && data.comment === _this.annotationData.comment && data.mark.x === _this.annotationData.mark.x && data.mark.y === _this.annotationData.mark.y && data.mark.width === _this.annotationData.mark.width && data.mark.height === _this.annotationData.mark.height;\n  };\n  this.annotationData = _data;\n  this.onChangeCallBack = onChange;\n  this.shapeStyle = shapeStyle;\n};\nvar Transformer = /*#__PURE__*/function () {\n  _createClass(Transformer, [{\n    key: \"nodeWidth\",\n    get: function get() {\n      return this.shape.shapeStyle.transformerSize / this.scale;\n    }\n  }]);\n  function Transformer(_shape, _scale) {\n    var _this = this;\n    _classCallCheck(this, Transformer);\n    this.shape = void 0;\n    this.currentNodeCenterIndex = void 0;\n    this.scale = void 0;\n    this.checkBoundary = function (positionX, positionY) {\n      var currentCenterIndex = _this.getCenterIndexByCursor(positionX, positionY);\n      return currentCenterIndex >= 0;\n    };\n    this.startTransformation = function (positionX, positionY) {\n      _this.currentNodeCenterIndex = _this.getCenterIndexByCursor(positionX, positionY);\n    };\n    this.onTransformation = function (positionX, positionY) {\n      var currentCentersTable = _this.getAllCentersTable();\n      currentCentersTable[_this.currentNodeCenterIndex].adjust(positionX, positionY);\n    };\n    this.paint = function (canvas2D, calculateTruePosition, scale) {\n      _this.scale = scale;\n      var allCentersTable = _this.getAllCentersTable();\n      canvas2D.save();\n      canvas2D.fillStyle = _this.shape.shapeStyle.transformerBackground;\n      var _iterator = _createForOfIteratorHelper(allCentersTable),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          var _calculateTruePositio = calculateTruePosition({\n              x: item.x - _this.nodeWidth / 2,\n              y: item.y - _this.nodeWidth / 2,\n              width: _this.nodeWidth,\n              height: _this.nodeWidth\n            }),\n            x = _calculateTruePositio.x,\n            y = _calculateTruePositio.y,\n            width = _calculateTruePositio.width,\n            height = _calculateTruePositio.height;\n          canvas2D.fillRect(x, y, width, height);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      canvas2D.restore();\n    };\n    this.getCenterIndexByCursor = function (positionX, positionY) {\n      var allCentersTable = _this.getAllCentersTable();\n      return allCentersTable.findIndex(function (item) {\n        return _this.checkEachRectBoundary(item.x, item.y, positionX, positionY);\n      });\n    };\n    this.checkEachRectBoundary = function (rectCenterX, rectCenterY, positionX, positionY) {\n      return Math.abs(positionX - rectCenterX) <= _this.nodeWidth / 2 && Math.abs(positionY - rectCenterY) <= _this.nodeWidth / 2;\n    };\n    this.getAllCentersTable = function () {\n      var shape = _this.shape;\n      var _shape$getAnnotationD = shape.getAnnotationData().mark,\n        x = _shape$getAnnotationD.x,\n        y = _shape$getAnnotationD.y,\n        width = _shape$getAnnotationD.width,\n        height = _shape$getAnnotationD.height;\n      return [{\n        x: x,\n        y: y,\n        adjust: function adjust(positionX, positionY) {\n          shape.adjustMark({\n            x: positionX,\n            y: positionY,\n            width: width + x - positionX,\n            height: height + y - positionY\n          });\n        }\n      }, {\n        x: x + width / 2,\n        y: y,\n        adjust: function adjust(_, positionY) {\n          shape.adjustMark({\n            y: positionY,\n            height: height + y - positionY\n          });\n        }\n      }, {\n        x: x + width,\n        y: y,\n        adjust: function adjust(positionX, positionY) {\n          shape.adjustMark({\n            x: x,\n            y: positionY,\n            width: positionX - x,\n            height: y + height - positionY\n          });\n        }\n      }, {\n        x: x,\n        y: y + height / 2,\n        adjust: function adjust(positionX) {\n          shape.adjustMark({\n            x: positionX,\n            width: width + x - positionX\n          });\n        }\n      }, {\n        x: x + width,\n        y: y + height / 2,\n        adjust: function adjust(positionX) {\n          shape.adjustMark({\n            width: positionX - x\n          });\n        }\n      }, {\n        x: x,\n        y: y + height,\n        adjust: function adjust(positionX, positionY) {\n          shape.adjustMark({\n            x: positionX,\n            width: width + x - positionX,\n            height: positionY - y\n          });\n        }\n      }, {\n        x: x + width / 2,\n        y: y + height,\n        adjust: function adjust(_, positionY) {\n          shape.adjustMark({\n            height: positionY - y\n          });\n        }\n      }, {\n        x: x + width,\n        y: y + height,\n        adjust: function adjust(positionX, positionY) {\n          shape.adjustMark({\n            width: positionX - x,\n            height: positionY - y\n          });\n        }\n      }];\n    };\n    this.shape = _shape;\n    this.scale = _scale;\n  }\n  return Transformer;\n}();\nvar randomId = function () {\n  var len = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 6;\n  var chars = \"ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678\";\n  var maxPos = chars.length;\n  var id = \"\";\n  for (var i = 0; i < len; i++) {\n    id += chars.charAt(Math.floor(Math.random() * maxPos));\n  }\n  return id;\n};\nvar CreatingAnnotationState = function CreatingAnnotationState(context) {\n  var _this = this;\n  _classCallCheck(this, CreatingAnnotationState);\n  this.context = void 0;\n  this.onMouseDown = function () {\n    return undefined;\n  };\n  this.onMouseMove = function (positionX, positionY) {\n    var shapes = _this.context.shapes;\n    if (shapes.length > 0) {\n      var currentShape = shapes[shapes.length - 1];\n      var _currentShape$getAnno = currentShape.getAnnotationData(),\n        _currentShape$getAnno2 = _currentShape$getAnno.mark,\n        x = _currentShape$getAnno2.x,\n        y = _currentShape$getAnno2.y;\n      currentShape.adjustMark({\n        width: positionX - x,\n        height: positionY - y\n      });\n    }\n  };\n  this.onMouseUp = function () {\n    var _this$context = _this.context,\n      shapes = _this$context.shapes,\n      onShapeChange = _this$context.onShapeChange,\n      setAnnotationState = _this$context.setAnnotationState;\n    var data = shapes.pop();\n    if (data && data.getAnnotationData().mark.width !== 0 && data.getAnnotationData().mark.height !== 0) {\n      shapes.push(data);\n    } else {\n      if (data && _this.applyDefaultAnnotationSize(data)) {\n        shapes.push(data);\n        onShapeChange();\n      } else {\n        _this.context.selectedId = null;\n        onShapeChange();\n      }\n    }\n    setAnnotationState(new DefaultAnnotationState(_this.context));\n  };\n  this.applyDefaultAnnotationSize = function (shape) {\n    if (_this.context.selectedId) {\n      // Don't capture clicks meant to de-select another annotation.\n      return false;\n    }\n    if (!_this.context.defaultAnnotationSize || _this.context.defaultAnnotationSize.length !== 2) {\n      return false;\n    }\n    var _this$context$default = _slicedToArray(_this.context.defaultAnnotationSize, 2),\n      width = _this$context$default[0],\n      height = _this$context$default[1];\n    shape.adjustMark({\n      width: width,\n      height: height\n    });\n    return true;\n  };\n  this.onMouseLeave = function () {\n    return _this.onMouseUp();\n  };\n  this.context = context;\n};\nvar DraggingAnnotationState = function DraggingAnnotationState(context) {\n  var _this = this;\n  _classCallCheck(this, DraggingAnnotationState);\n  this.context = void 0;\n  this.onMouseDown = function () {\n    return undefined;\n  };\n  this.onMouseMove = function (positionX, positionY) {\n    var shapes = _this.context.shapes;\n    var currentShape = shapes[shapes.length - 1];\n    currentShape.onDrag(positionX, positionY);\n  };\n  this.onMouseUp = function () {\n    var setAnnotationState = _this.context.setAnnotationState;\n    setAnnotationState(new DefaultAnnotationState(_this.context));\n  };\n  this.onMouseLeave = function () {\n    return _this.onMouseUp();\n  };\n  this.context = context;\n};\nvar TransformationState = function TransformationState(context) {\n  var _this = this;\n  _classCallCheck(this, TransformationState);\n  this.context = void 0;\n  this.onMouseDown = function () {\n    return undefined;\n  };\n  this.onMouseMove = function (positionX, positionY) {\n    var currentTransformer = _this.context.currentTransformer;\n    if (currentTransformer) {\n      currentTransformer.onTransformation(positionX, positionY);\n    }\n  };\n  this.onMouseUp = function () {\n    var setAnnotationState = _this.context.setAnnotationState;\n    setAnnotationState(new DefaultAnnotationState(_this.context));\n  };\n  this.onMouseLeave = function () {\n    return _this.onMouseUp();\n  };\n  this.context = context;\n};\nvar DefaultAnnotationState = function DefaultAnnotationState(context) {\n  var _this = this;\n  _classCallCheck(this, DefaultAnnotationState);\n  this.context = void 0;\n  this.onMouseMove = function () {\n    return undefined;\n  };\n  this.onMouseUp = function () {\n    return undefined;\n  };\n  this.onMouseLeave = function () {\n    return undefined;\n  };\n  this.onMouseDown = function (positionX, positionY) {\n    var _this$context = _this.context,\n      shapes = _this$context.shapes,\n      currentTransformer = _this$context.currentTransformer,\n      onShapeChange = _this$context.onShapeChange,\n      setState = _this$context.setAnnotationState;\n    if (currentTransformer && currentTransformer.checkBoundary(positionX, positionY)) {\n      currentTransformer.startTransformation(positionX, positionY);\n      setState(new TransformationState(_this.context));\n      return;\n    }\n    for (var i = shapes.length - 1; i >= 0; i--) {\n      if (shapes[i].checkBoundary(positionX, positionY)) {\n        _this.context.selectedId = shapes[i].getAnnotationData().id;\n        _this.context.currentTransformer = new Transformer(shapes[i], _this.context.scaleState.scale);\n        var _shapes$splice = shapes.splice(i, 1),\n          _shapes$splice2 = _slicedToArray(_shapes$splice, 1),\n          selectedShape = _shapes$splice2[0];\n        shapes.push(selectedShape);\n        selectedShape.onDragStart(positionX, positionY);\n        onShapeChange();\n        setState(new DraggingAnnotationState(_this.context));\n        return;\n      }\n    }\n    _this.context.shapes.push(new RectShape({\n      id: randomId(),\n      mark: {\n        x: positionX,\n        y: positionY,\n        width: 0,\n        height: 0,\n        type: \"RECT\"\n      }\n    }, onShapeChange, _this.context.annotationStyle));\n    setState(new CreatingAnnotationState(_this.context));\n  };\n  this.context = context;\n};\nvar DeleteButton = function () {\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"rp-delete\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    \"data-name\": \"Layer 2\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    \"data-name\": \"trash-2\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: \"24\",\n    height: \"24\",\n    opacity: \"0\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M21 6h-5V4.33A2.42 2.42 0 0 0 13.5 2h-3A2.42 2.42 0 0 0 8 4.33V6H3a1 1 0 0 0 0 2h1v11a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V8h1a1 1 0 0 0 0-2zM10 16a1 1 0 0 1-2 0v-4a1 1 0 0 1 2 0zm0-11.67c0-.16.21-.33.5-.33h3c.29 0 .5.17.5.33V6h-4zM16 16a1 1 0 0 1-2 0v-4a1 1 0 0 1 2 0z\"\n  }))));\n};\nvar DefaultInputSection = function (_ref) {\n  var value = _ref.value,\n    _onChange = _ref.onChange,\n    onDelete = _ref.onDelete,\n    _ref$placeholder = _ref.placeholder,\n    placeholder = _ref$placeholder === void 0 ? \"INPUT TAG HERE\" : _ref$placeholder;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rp-default-input-section\"\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"rp-default-input-section_input\",\n    placeholder: placeholder,\n    value: value,\n    onChange: function onChange(e) {\n      return _onChange(e.target.value);\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"rp-default-input-section_delete\",\n    onClick: function onClick() {\n      return onDelete();\n    }\n  }, /*#__PURE__*/React.createElement(DeleteButton, null)));\n};\nvar defaultState = {\n  scale: 1,\n  originX: 0,\n  originY: 0\n};\nvar ReactPictureAnnotation = /*#__PURE__*/function (_React$Component) {\n  _inherits(ReactPictureAnnotation, _React$Component);\n  var _super = _createSuper(ReactPictureAnnotation);\n  function ReactPictureAnnotation() {\n    var _this;\n    _classCallCheck(this, ReactPictureAnnotation);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      inputPosition: {\n        left: 0,\n        top: 0\n      },\n      showInput: false,\n      inputComment: \"\"\n    };\n    _this.shapes = [];\n    _this.scaleState = defaultState;\n    _this.currentTransformer = void 0;\n    _this.currentAnnotationData = [];\n    _this.selectedIdTrueValue = void 0;\n    _this.canvasRef = /*#__PURE__*/React.createRef();\n    _this.canvas2D = void 0;\n    _this.imageCanvasRef = /*#__PURE__*/React.createRef();\n    _this.imageCanvas2D = void 0;\n    _this.currentImageElement = void 0;\n    _this.currentAnnotationState = new DefaultAnnotationState(_assertThisInitialized(_this));\n    _this.componentDidMount = function () {\n      var currentCanvas = _this.canvasRef.current;\n      var currentImageCanvas = _this.imageCanvasRef.current;\n      if (currentCanvas && currentImageCanvas) {\n        _this.setCanvasDPI();\n        _this.canvas2D = currentCanvas.getContext(\"2d\");\n        _this.imageCanvas2D = currentImageCanvas.getContext(\"2d\");\n        _this.onImageChange();\n      }\n      _this.syncAnnotationData();\n      _this.syncSelectedId();\n    };\n    _this.componentDidUpdate = function (preProps) {\n      var _this$props = _this.props,\n        width = _this$props.width,\n        height = _this$props.height,\n        image = _this$props.image;\n      if (preProps.width !== width || preProps.height !== height) {\n        _this.setCanvasDPI();\n        _this.onShapeChange();\n        _this.onImageChange();\n      }\n      if (preProps.image !== image) {\n        _this.cleanImage();\n        if (_this.currentImageElement) {\n          _this.currentImageElement.src = image;\n        } else {\n          _this.onImageChange();\n        }\n      }\n      _this.syncAnnotationData();\n      _this.syncSelectedId();\n    };\n    _this.calculateMousePosition = function (positionX, positionY) {\n      var _this$scaleState = _this.scaleState,\n        originX = _this$scaleState.originX,\n        originY = _this$scaleState.originY,\n        scale = _this$scaleState.scale;\n      return {\n        positionX: (positionX - originX) / scale,\n        positionY: (positionY - originY) / scale\n      };\n    };\n    _this.calculateShapePosition = function (shapeData) {\n      var _this$scaleState2 = _this.scaleState,\n        originX = _this$scaleState2.originX,\n        originY = _this$scaleState2.originY,\n        scale = _this$scaleState2.scale;\n      var x = shapeData.x,\n        y = shapeData.y,\n        width = shapeData.width,\n        height = shapeData.height;\n      return {\n        x: x * scale + originX,\n        y: y * scale + originY,\n        width: width * scale,\n        height: height * scale\n      };\n    };\n    _this.setAnnotationState = function (annotationState) {\n      _this.currentAnnotationState = annotationState;\n    };\n    _this.onShapeChange = function () {\n      if (_this.canvas2D && _this.canvasRef.current) {\n        _this.canvas2D.clearRect(0, 0, _this.canvasRef.current.width, _this.canvasRef.current.height);\n        var hasSelectedItem = false;\n        var _iterator = _createForOfIteratorHelper(_this.shapes),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var item = _step.value;\n            var isSelected = item.getAnnotationData().id === _this.selectedId;\n            var _item$paint = item.paint(_this.canvas2D, _this.calculateShapePosition, isSelected),\n              x = _item$paint.x,\n              y = _item$paint.y,\n              height = _item$paint.height;\n            if (isSelected) {\n              if (!_this.currentTransformer) {\n                _this.currentTransformer = new Transformer(item, _this.scaleState.scale);\n              }\n              hasSelectedItem = true;\n              _this.currentTransformer.paint(_this.canvas2D, _this.calculateShapePosition, _this.scaleState.scale);\n              _this.setState({\n                showInput: true,\n                inputPosition: {\n                  left: x,\n                  top: y + height + _this.props.marginWithInput\n                },\n                inputComment: item.getAnnotationData().comment || \"\"\n              });\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        if (!hasSelectedItem) {\n          _this.setState({\n            showInput: false,\n            inputComment: \"\"\n          });\n        }\n      }\n      _this.currentAnnotationData = _this.shapes.map(function (item) {\n        return item.getAnnotationData();\n      });\n      var onChange = _this.props.onChange;\n      onChange(_this.currentAnnotationData);\n    };\n    _this.syncAnnotationData = function () {\n      var annotationData = _this.props.annotationData;\n      if (annotationData) {\n        var refreshShapesWithAnnotationData = function refreshShapesWithAnnotationData() {\n          _this.selectedId = null;\n          _this.shapes = annotationData.map(function (eachAnnotationData) {\n            return new RectShape(eachAnnotationData, _this.onShapeChange, _this.annotationStyle);\n          });\n          _this.onShapeChange();\n        };\n        if (annotationData.length !== _this.shapes.length) {\n          refreshShapesWithAnnotationData();\n        } else {\n          var _iterator2 = _createForOfIteratorHelper(annotationData),\n            _step2;\n          try {\n            var _loop = function _loop() {\n              var annotationDataItem = _step2.value;\n              var targetShape = _this.shapes.find(function (item) {\n                return item.getAnnotationData().id === annotationDataItem.id;\n              });\n              if (targetShape && targetShape.equal(annotationDataItem)) {\n                return \"continue\";\n              } else {\n                refreshShapesWithAnnotationData();\n                return \"break\";\n              }\n            };\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var _ret = _loop();\n              if (_ret === \"continue\") continue;\n              if (_ret === \"break\") break;\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      }\n    };\n    _this.syncSelectedId = function () {\n      var selectedId = _this.props.selectedId;\n      if (selectedId && selectedId !== _this.selectedId) {\n        _this.selectedId = selectedId;\n        _this.onShapeChange();\n      }\n    };\n    _this.onDelete = function () {\n      var deleteTarget = _this.shapes.findIndex(function (shape) {\n        return shape.getAnnotationData().id === _this.selectedId;\n      });\n      if (deleteTarget >= 0) {\n        _this.shapes.splice(deleteTarget, 1);\n        _this.onShapeChange();\n      }\n    };\n    _this.setCanvasDPI = function () {\n      var currentCanvas = _this.canvasRef.current;\n      var currentImageCanvas = _this.imageCanvasRef.current;\n      if (currentCanvas && currentImageCanvas) {\n        var currentCanvas2D = currentCanvas.getContext(\"2d\");\n        var currentImageCanvas2D = currentImageCanvas.getContext(\"2d\");\n        if (currentCanvas2D && currentImageCanvas2D) {\n          currentCanvas2D.scale(2, 2);\n          currentImageCanvas2D.scale(2, 2);\n        }\n      }\n    };\n    _this.onInputCommentChange = function (comment) {\n      var selectedShapeIndex = _this.shapes.findIndex(function (item) {\n        return item.getAnnotationData().id === _this.selectedId;\n      });\n      _this.shapes[selectedShapeIndex].setComment(comment);\n      _this.setState({\n        inputComment: comment\n      });\n    };\n    _this.cleanImage = function () {\n      if (_this.imageCanvas2D && _this.imageCanvasRef.current) {\n        _this.imageCanvas2D.clearRect(0, 0, _this.imageCanvasRef.current.width, _this.imageCanvasRef.current.height);\n      }\n    };\n    _this.onImageChange = function () {\n      _this.cleanImage();\n      if (_this.imageCanvas2D && _this.imageCanvasRef.current) {\n        if (_this.currentImageElement) {\n          var _this$scaleState3 = _this.scaleState,\n            originX = _this$scaleState3.originX,\n            originY = _this$scaleState3.originY,\n            scale = _this$scaleState3.scale;\n          _this.imageCanvas2D.drawImage(_this.currentImageElement, originX, originY, _this.currentImageElement.width * scale, _this.currentImageElement.height * scale);\n        } else {\n          var nextImageNode = document.createElement(\"img\");\n          nextImageNode.addEventListener(\"load\", function () {\n            _this.currentImageElement = nextImageNode;\n            var width = nextImageNode.width,\n              height = nextImageNode.height;\n            var imageNodeRatio = height / width;\n            var _this$props2 = _this.props,\n              canvasWidth = _this$props2.width,\n              canvasHeight = _this$props2.height;\n            var canvasNodeRatio = canvasHeight / canvasWidth;\n            if (!isNaN(imageNodeRatio) && !isNaN(canvasNodeRatio)) {\n              if (imageNodeRatio < canvasNodeRatio) {\n                var _scale = canvasWidth / width;\n                _this.scaleState = {\n                  originX: 0,\n                  originY: (canvasHeight - _scale * height) / 2,\n                  scale: _scale\n                };\n              } else {\n                var _scale2 = canvasHeight / height;\n                _this.scaleState = {\n                  originX: (canvasWidth - _scale2 * width) / 2,\n                  originY: 0,\n                  scale: _scale2\n                };\n              }\n            }\n            _this.onImageChange();\n            _this.onShapeChange();\n          });\n          nextImageNode.alt = \"\";\n          nextImageNode.src = _this.props.image;\n        }\n      }\n    };\n    _this.onMouseDown = function (event) {\n      var _event$nativeEvent = event.nativeEvent,\n        offsetX = _event$nativeEvent.offsetX,\n        offsetY = _event$nativeEvent.offsetY;\n      var _this$calculateMouseP = _this.calculateMousePosition(offsetX, offsetY),\n        positionX = _this$calculateMouseP.positionX,\n        positionY = _this$calculateMouseP.positionY;\n      _this.currentAnnotationState.onMouseDown(positionX, positionY);\n    };\n    _this.onMouseMove = function (event) {\n      var _event$nativeEvent2 = event.nativeEvent,\n        offsetX = _event$nativeEvent2.offsetX,\n        offsetY = _event$nativeEvent2.offsetY;\n      var _this$calculateMouseP2 = _this.calculateMousePosition(offsetX, offsetY),\n        positionX = _this$calculateMouseP2.positionX,\n        positionY = _this$calculateMouseP2.positionY;\n      _this.currentAnnotationState.onMouseMove(positionX, positionY);\n    };\n    _this.onMouseUp = function () {\n      _this.currentAnnotationState.onMouseUp();\n    };\n    _this.onMouseLeave = function () {\n      _this.currentAnnotationState.onMouseLeave();\n    };\n    _this.onWheel = function (event) {\n      // https://stackoverflow.com/a/31133823/9071503\n      var _event$currentTarget = event.currentTarget,\n        clientHeight = _event$currentTarget.clientHeight,\n        scrollTop = _event$currentTarget.scrollTop,\n        scrollHeight = _event$currentTarget.scrollHeight;\n      if (clientHeight + scrollTop + event.deltaY > scrollHeight) {\n        // event.preventDefault();\n        event.currentTarget.scrollTop = scrollHeight;\n      } else if (scrollTop + event.deltaY < 0) {\n        // event.preventDefault();\n        event.currentTarget.scrollTop = 0;\n      }\n      var preScale = _this.scaleState.scale;\n      _this.scaleState.scale += event.deltaY * _this.props.scrollSpeed;\n      if (_this.scaleState.scale > 10) {\n        _this.scaleState.scale = 10;\n      }\n      if (_this.scaleState.scale < 0.1) {\n        _this.scaleState.scale = 0.1;\n      }\n      var _this$scaleState4 = _this.scaleState,\n        originX = _this$scaleState4.originX,\n        originY = _this$scaleState4.originY,\n        scale = _this$scaleState4.scale;\n      var _event$nativeEvent3 = event.nativeEvent,\n        offsetX = _event$nativeEvent3.offsetX,\n        offsetY = _event$nativeEvent3.offsetY;\n      _this.scaleState.originX = offsetX - (offsetX - originX) / preScale * scale;\n      _this.scaleState.originY = offsetY - (offsetY - originY) / preScale * scale;\n      _this.setState({\n        imageScale: _this.scaleState\n      });\n      requestAnimationFrame(function () {\n        _this.onShapeChange();\n        _this.onImageChange();\n      });\n    };\n    return _this;\n  }\n  _createClass(ReactPictureAnnotation, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n        width = _this$props3.width,\n        height = _this$props3.height,\n        inputElement = _this$props3.inputElement;\n      var _this$state = this.state,\n        showInput = _this$state.showInput,\n        inputPosition = _this$state.inputPosition,\n        inputComment = _this$state.inputComment;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rp-stage\"\n      }, /*#__PURE__*/React.createElement(\"canvas\", {\n        style: {\n          width: width,\n          height: height\n        },\n        className: \"rp-image\",\n        ref: this.imageCanvasRef,\n        width: width * 2,\n        height: height * 2\n      }), /*#__PURE__*/React.createElement(\"canvas\", {\n        className: \"rp-shapes\",\n        style: {\n          width: width,\n          height: height\n        },\n        ref: this.canvasRef,\n        width: width * 2,\n        height: height * 2,\n        onMouseDown: this.onMouseDown,\n        onMouseMove: this.onMouseMove,\n        onMouseUp: this.onMouseUp,\n        onMouseLeave: this.onMouseLeave,\n        onWheel: this.onWheel\n      }), showInput && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rp-selected-input\",\n        style: inputPosition\n      }, inputElement(inputComment, this.onInputCommentChange, this.onDelete)));\n    }\n  }, {\n    key: \"selectedId\",\n    set: function set(value) {\n      var onSelect = this.props.onSelect;\n      this.selectedIdTrueValue = value;\n      onSelect(value);\n    },\n    get: function get() {\n      return this.selectedIdTrueValue;\n    }\n  }, {\n    key: \"annotationStyle\",\n    get: function get() {\n      return this.props.annotationStyle;\n    }\n  }, {\n    key: \"defaultAnnotationSize\",\n    get: function get() {\n      return this.props.defaultAnnotationSize;\n    }\n  }]);\n  return ReactPictureAnnotation;\n}(React.Component);\nReactPictureAnnotation.defaultProps = {\n  marginWithInput: 10,\n  scrollSpeed: 0.0005,\n  annotationStyle: defaultShapeStyle,\n  inputElement: function inputElement(value, onChange, onDelete) {\n    return /*#__PURE__*/React.createElement(DefaultInputSection, {\n      value: value,\n      onChange: onChange,\n      onDelete: onDelete\n    });\n  }\n};\nexport { DefaultInputSection, ReactPictureAnnotation, defaultShapeStyle };","map":{"version":3,"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","defaultShapeStyle","padding","lineWidth","shadowBlur","fontSize","fontColor","fontBackground","fontFamily","shapeBackground","shapeStrokeStyle","shapeShadowStyle","transformerBackground","transformerSize","RectShape","_data","onChange","_this","shapeStyle","arguments","length","undefined","_classCallCheck","annotationData","onChangeCallBack","dragStartOffset","onDragStart","positionX","positionY","_this$annotationData$","mark","x","y","offsetX","offsetY","onDrag","checkBoundary","_this$annotationData$2","width","height","paint","canvas2D","calculateTruePosition","selected","_calculateTruePositio","save","_this$shapeStyle","shadowColor","strokeStyle","strokeRect","restore","fillStyle","fillRect","_comment","comment","font","concat","metrics","measureText","textBaseline","fillText","adjustMark","_ref","_ref$x","_ref$y","_ref$width","_ref$height","getAnnotationData","setComment","equal","data","id","Transformer","shape","scale","_shape","_scale","currentNodeCenterIndex","currentCenterIndex","getCenterIndexByCursor","startTransformation","onTransformation","currentCentersTable","getAllCentersTable","adjust","allCentersTable","_iterator","_createForOfIteratorHelper","_step","s","n","done","item","value","nodeWidth","err","e","f","findIndex","checkEachRectBoundary","rectCenterX","rectCenterY","Math","abs","_shape$getAnnotationD","_","randomId","len","chars","maxPos","i","charAt","floor","random","CreatingAnnotationState","context","onMouseDown","onMouseMove","shapes","currentShape","_currentShape$getAnno","_currentShape$getAnno2","onMouseUp","_this$context","onShapeChange","setAnnotationState","pop","push","applyDefaultAnnotationSize","selectedId","DefaultAnnotationState","defaultAnnotationSize","_this$context$default","_slicedToArray","onMouseLeave","DraggingAnnotationState","TransformationState","currentTransformer","setState","scaleState","_shapes$splice","splice","_shapes$splice2","selectedShape","annotationStyle","DeleteButton","React","className","xmlns","viewBox","opacity","d","DefaultInputSection","_onChange","onDelete","_ref$placeholder","placeholder","target","onClick","defaultState","originX","originY","ReactPictureAnnotation","_React$Component","state","inputPosition","left","top","showInput","inputComment","currentAnnotationData","selectedIdTrueValue","canvasRef","createRef","imageCanvasRef","imageCanvas2D","currentImageElement","currentAnnotationState","_assertThisInitialized","componentDidMount","currentCanvas","current","currentImageCanvas","setCanvasDPI","getContext","onImageChange","syncAnnotationData","syncSelectedId","componentDidUpdate","preProps","_this$props","props","image","cleanImage","src","calculateMousePosition","_this$scaleState","calculateShapePosition","shapeData","_this$scaleState2","annotationState","clearRect","hasSelectedItem","isSelected","_item$paint","marginWithInput","map","refreshShapesWithAnnotationData","eachAnnotationData","_iterator2","_step2","_loop","annotationDataItem","targetShape","find","_ret","deleteTarget","currentCanvas2D","currentImageCanvas2D","onInputCommentChange","selectedShapeIndex","_this$scaleState3","drawImage","nextImageNode","addEventListener","imageNodeRatio","_this$props2","canvasWidth","canvasHeight","canvasNodeRatio","isNaN","_scale2","alt","event","_event$nativeEvent","nativeEvent","_this$calculateMouseP","_event$nativeEvent2","_this$calculateMouseP2","onWheel","_event$currentTarget","currentTarget","clientHeight","scrollTop","scrollHeight","deltaY","preScale","scrollSpeed","_this$scaleState4","_event$nativeEvent3","imageScale","requestAnimationFrame","_this$props3","inputElement","_this$state","onSelect","Component","defaultProps"],"sources":["C:\\Users\\vishn\\Downloads\\vi_frontend-main\\vi_frontend-main\\node_modules\\react-picture-annotation\\node_modules\\style-inject\\dist\\style-inject.es.js","C:\\Users\\vishn\\Downloads\\vi_frontend-main\\vi_frontend-main\\node_modules\\react-picture-annotation\\src\\Shape.ts","C:\\Users\\vishn\\Downloads\\vi_frontend-main\\vi_frontend-main\\node_modules\\react-picture-annotation\\src\\Transformer.ts","C:\\Users\\vishn\\Downloads\\vi_frontend-main\\vi_frontend-main\\node_modules\\react-picture-annotation\\src\\utils\\randomId.ts","C:\\Users\\vishn\\Downloads\\vi_frontend-main\\vi_frontend-main\\node_modules\\react-picture-annotation\\src\\annotation\\CreatingAnnotationState.ts","C:\\Users\\vishn\\Downloads\\vi_frontend-main\\vi_frontend-main\\node_modules\\react-picture-annotation\\src\\annotation\\DraggingAnnotationState.ts","C:\\Users\\vishn\\Downloads\\vi_frontend-main\\vi_frontend-main\\node_modules\\react-picture-annotation\\src\\annotation\\TransfromationState.ts","C:\\Users\\vishn\\Downloads\\vi_frontend-main\\vi_frontend-main\\node_modules\\react-picture-annotation\\src\\annotation\\DefaultAnnotationState.ts","C:\\Users\\vishn\\Downloads\\vi_frontend-main\\vi_frontend-main\\node_modules\\react-picture-annotation\\src\\DeleteButton.tsx","C:\\Users\\vishn\\Downloads\\vi_frontend-main\\vi_frontend-main\\node_modules\\react-picture-annotation\\src\\DefaultInputSection.tsx","C:\\Users\\vishn\\Downloads\\vi_frontend-main\\vi_frontend-main\\node_modules\\react-picture-annotation\\src\\ReactPictureAnnotation.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { IAnnotation } from \"./Annotation\";\n\nexport const defaultShapeStyle: IShapeStyle = {\n  padding: 5,\n  lineWidth: 2,\n  shadowBlur: 10,\n  fontSize: 12,\n  fontColor: \"#212529\",\n  fontBackground: \"#f8f9fa\",\n  fontFamily:\n    \"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen-Sans, Ubuntu, Cantarell, 'Helvetica Neue', Helvetica, Arial, sans-serif\",\n  shapeBackground: \"hsla(210, 16%, 93%, 0.2)\",\n  shapeStrokeStyle: \"#f8f9fa\",\n  shapeShadowStyle: \"hsla(210, 9%, 31%, 0.35)\",\n  transformerBackground: \"#5c7cfa\",\n  transformerSize: 10,\n};\n\nexport interface IShapeStyle {\n  padding: number;\n  lineWidth: number;\n  shadowBlur: number;\n  fontSize: number;\n  fontColor: string;\n  fontBackground: string;\n  fontFamily: string;\n  shapeBackground: string;\n  shapeStrokeStyle: string;\n  shapeShadowStyle: string;\n  transformerBackground: string;\n  transformerSize: number;\n}\n\nexport interface IShapeBase {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\nexport interface IShapeAdjustBase {\n  x?: number;\n  y?: number;\n  width?: number;\n  height?: number;\n}\n\nexport interface IShapeData extends IShapeBase {\n  type: string;\n}\n\nexport interface IRectShapeData extends IShapeData {\n  type: \"RECT\";\n}\n\nexport interface IShape {\n  shapeStyle: IShapeStyle;\n  onDragStart: (positionX: number, positionY: number) => void;\n  onDrag: (positionX: number, positionY: number) => void;\n  checkBoundary: (positionX: number, positionY: number) => boolean;\n  paint: (\n    canvas2D: CanvasRenderingContext2D,\n    calculateTruePosition: (shapeData: IShapeBase) => IShapeBase,\n    selected: boolean\n  ) => IShapeBase;\n  getAnnotationData: () => IAnnotation;\n  adjustMark: (adjustBase: IShapeAdjustBase) => void;\n  setComment: (comment: string) => void;\n  equal: (data: IAnnotation) => boolean;\n}\n\nexport class RectShape implements IShape {\n  private readonly annotationData: IAnnotation<IShapeData>;\n\n  private readonly onChangeCallBack: () => void;\n\n  private dragStartOffset: { offsetX: number; offsetY: number };\n\n  public readonly shapeStyle: IShapeStyle;\n\n  constructor(\n    data: IAnnotation<IShapeData>,\n    onChange: () => void,\n    shapeStyle: IShapeStyle = defaultShapeStyle\n  ) {\n    this.annotationData = data;\n    this.onChangeCallBack = onChange;\n    this.shapeStyle = shapeStyle;\n  }\n\n  public onDragStart = (positionX: number, positionY: number) => {\n    const { x, y } = this.annotationData.mark;\n    this.dragStartOffset = {\n      offsetX: positionX - x,\n      offsetY: positionY - y,\n    };\n  };\n\n  public onDrag = (positionX: number, positionY: number) => {\n    this.annotationData.mark.x = positionX - this.dragStartOffset.offsetX;\n    this.annotationData.mark.y = positionY - this.dragStartOffset.offsetY;\n    this.onChangeCallBack();\n  };\n\n  public checkBoundary = (positionX: number, positionY: number) => {\n    const {\n      mark: { x, y, width, height },\n    } = this.annotationData;\n\n    return (\n      ((positionX > x && positionX < x + width) ||\n        (positionX < x && positionX > x + width)) &&\n      ((positionY > y && positionY < y + height) ||\n        (positionY < y && positionY > y + height))\n    );\n  };\n\n  public paint = (\n    canvas2D: CanvasRenderingContext2D,\n    calculateTruePosition: (shapeData: IShapeBase) => IShapeBase,\n    selected: boolean\n  ) => {\n    const { x, y, width, height } = calculateTruePosition(\n      this.annotationData.mark\n    );\n    canvas2D.save();\n\n    const {\n      padding,\n      lineWidth,\n      shadowBlur,\n      fontSize,\n      fontColor,\n      fontBackground,\n      fontFamily,\n      shapeBackground,\n      shapeStrokeStyle,\n      shapeShadowStyle,\n    } = this.shapeStyle;\n\n    canvas2D.shadowBlur = shadowBlur;\n    canvas2D.shadowColor = shapeShadowStyle;\n    canvas2D.strokeStyle = shapeStrokeStyle;\n    canvas2D.lineWidth = lineWidth;\n    canvas2D.strokeRect(x, y, width, height);\n    canvas2D.restore();\n    if (selected) {\n      canvas2D.fillStyle = shapeBackground;\n      canvas2D.fillRect(x, y, width, height);\n    } else {\n      const { comment } = this.annotationData;\n      if (comment) {\n        canvas2D.font = `${fontSize}px ${fontFamily}`;\n        const metrics = canvas2D.measureText(comment);\n        canvas2D.save();\n        canvas2D.fillStyle = fontBackground;\n        canvas2D.fillRect(\n          x,\n          y,\n          metrics.width + padding * 2,\n          fontSize + padding * 2\n        );\n        canvas2D.textBaseline = \"top\";\n        canvas2D.fillStyle = fontColor;\n        canvas2D.fillText(comment, x + padding, y + padding);\n      }\n    }\n    canvas2D.restore();\n\n    return { x, y, width, height };\n  };\n\n  public adjustMark = ({\n    x = this.annotationData.mark.x,\n    y = this.annotationData.mark.y,\n    width = this.annotationData.mark.width,\n    height = this.annotationData.mark.height,\n  }: {\n    x?: number;\n    y?: number;\n    width?: number;\n    height?: number;\n  }) => {\n    this.annotationData.mark.x = x;\n    this.annotationData.mark.y = y;\n    this.annotationData.mark.width = width;\n    this.annotationData.mark.height = height;\n    this.onChangeCallBack();\n  };\n\n  public getAnnotationData = () => {\n    return this.annotationData;\n  };\n\n  public setComment = (comment: string) => {\n    this.annotationData.comment = comment;\n  };\n\n  public equal = (data: IAnnotation) => {\n    return (\n      data.id === this.annotationData.id &&\n      data.comment === this.annotationData.comment &&\n      data.mark.x === this.annotationData.mark.x &&\n      data.mark.y === this.annotationData.mark.y &&\n      data.mark.width === this.annotationData.mark.width &&\n      data.mark.height === this.annotationData.mark.height\n    );\n  };\n}\n","import { IShape, IShapeBase } from \"Shape\";\n\nexport interface ITransformer {\n  checkBoundary: (positionX: number, positionY: number) => boolean;\n  startTransformation: (positionX: number, positionY: number) => void;\n  onTransformation: (positionX: number, positionY: number) => void;\n  paint: (\n    canvas2D: CanvasRenderingContext2D,\n    calculateTruePosition: (shapeData: IShapeBase) => IShapeBase,\n    scale: number\n  ) => void;\n}\n\nexport default class Transformer implements ITransformer {\n  private readonly shape: IShape;\n  private currentNodeCenterIndex: number;\n  private scale: number;\n\n  private get nodeWidth() {\n    return this.shape.shapeStyle.transformerSize / this.scale;\n  }\n\n  constructor(shape: IShape, scale: number) {\n    this.shape = shape;\n    this.scale = scale;\n  }\n\n  public checkBoundary = (positionX: number, positionY: number) => {\n    const currentCenterIndex = this.getCenterIndexByCursor(\n      positionX,\n      positionY\n    );\n    return currentCenterIndex >= 0;\n  };\n\n  public startTransformation = (positionX: number, positionY: number) => {\n    this.currentNodeCenterIndex = this.getCenterIndexByCursor(\n      positionX,\n      positionY\n    );\n  };\n\n  public onTransformation = (positionX: number, positionY: number) => {\n    const currentCentersTable = this.getAllCentersTable();\n    currentCentersTable[this.currentNodeCenterIndex].adjust(\n      positionX,\n      positionY\n    );\n  };\n\n  public paint = (\n    canvas2D: CanvasRenderingContext2D,\n    calculateTruePosition: (shapeData: IShapeBase) => IShapeBase,\n    scale: number\n  ) => {\n    this.scale = scale;\n\n    const allCentersTable = this.getAllCentersTable();\n    canvas2D.save();\n    canvas2D.fillStyle = this.shape.shapeStyle.transformerBackground;\n\n    for (const item of allCentersTable) {\n      const { x, y, width, height } = calculateTruePosition({\n        x: item.x - this.nodeWidth / 2,\n        y: item.y - this.nodeWidth / 2,\n        width: this.nodeWidth,\n        height: this.nodeWidth,\n      });\n      canvas2D.fillRect(x, y, width, height);\n    }\n\n    canvas2D.restore();\n  };\n\n  private getCenterIndexByCursor = (positionX: number, positionY: number) => {\n    const allCentersTable = this.getAllCentersTable();\n    return allCentersTable.findIndex((item) =>\n      this.checkEachRectBoundary(item.x, item.y, positionX, positionY)\n    );\n  };\n\n  private checkEachRectBoundary = (\n    rectCenterX: number,\n    rectCenterY: number,\n    positionX: number,\n    positionY: number\n  ) => {\n    return (\n      Math.abs(positionX - rectCenterX) <= this.nodeWidth / 2 &&\n      Math.abs(positionY - rectCenterY) <= this.nodeWidth / 2\n    );\n  };\n\n  private getAllCentersTable = () => {\n    const { shape } = this;\n    const { x, y, width, height } = shape.getAnnotationData().mark;\n    return [\n      {\n        x,\n        y,\n        adjust: (positionX: number, positionY: number) => {\n          shape.adjustMark({\n            x: positionX,\n            y: positionY,\n            width: width + x - positionX,\n            height: height + y - positionY,\n          });\n        },\n      },\n      {\n        x: x + width / 2,\n        y,\n        adjust: (_: number, positionY: number) => {\n          shape.adjustMark({\n            y: positionY,\n            height: height + y - positionY,\n          });\n        },\n      },\n      {\n        x: x + width,\n        y,\n        adjust: (positionX: number, positionY: number) => {\n          shape.adjustMark({\n            x,\n            y: positionY,\n            width: positionX - x,\n            height: y + height - positionY,\n          });\n        },\n      },\n      {\n        x,\n        y: y + height / 2,\n        adjust: (positionX: number) => {\n          shape.adjustMark({\n            x: positionX,\n            width: width + x - positionX,\n          });\n        },\n      },\n      {\n        x: x + width,\n        y: y + height / 2,\n        adjust: (positionX: number) => {\n          shape.adjustMark({ width: positionX - x });\n        },\n      },\n      {\n        x,\n        y: y + height,\n        adjust: (positionX: number, positionY: number) => {\n          shape.adjustMark({\n            x: positionX,\n            width: width + x - positionX,\n            height: positionY - y,\n          });\n        },\n      },\n      {\n        x: x + width / 2,\n        y: y + height,\n        adjust: (_: number, positionY: number) => {\n          shape.adjustMark({\n            height: positionY - y,\n          });\n        },\n      },\n      {\n        x: x + width,\n        y: y + height,\n        adjust: (positionX: number, positionY: number) => {\n          shape.adjustMark({\n            width: positionX - x,\n            height: positionY - y,\n          });\n        },\n      },\n    ];\n  };\n}\n","export default (len = 6) => {\n  const chars = \"ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678\";\n  const maxPos = chars.length;\n  let id = \"\";\n  for (let i = 0; i < len; i++) {\n    id += chars.charAt(Math.floor(Math.random() * maxPos));\n  }\n  return id;\n};\n","import { ReactPictureAnnotation } from \"index\";\nimport { IShape } from \"Shape\";\nimport { IAnnotationState } from \"./AnnotationState\";\nimport { DefaultAnnotationState } from \"./DefaultAnnotationState\";\n\nexport default class CreatingAnnotationState implements IAnnotationState {\n  private readonly context: ReactPictureAnnotation;\n  constructor(context: ReactPictureAnnotation) {\n    this.context = context;\n  }\n  public onMouseDown = () => undefined;\n  public onMouseMove = (positionX: number, positionY: number) => {\n    const { shapes } = this.context;\n    if (shapes.length > 0) {\n      const currentShape = shapes[shapes.length - 1];\n      const {\n        mark: { x, y },\n      } = currentShape.getAnnotationData();\n      currentShape.adjustMark({\n        width: positionX - x,\n        height: positionY - y,\n      });\n    }\n  };\n\n  public onMouseUp = () => {\n    const { shapes, onShapeChange, setAnnotationState } = this.context;\n    const data = shapes.pop();\n    if (\n      data &&\n      data.getAnnotationData().mark.width !== 0 &&\n      data.getAnnotationData().mark.height !== 0\n    ) {\n      shapes.push(data);\n    } else {\n      if (data && this.applyDefaultAnnotationSize(data)) {\n        shapes.push(data);\n        onShapeChange();\n      } else {\n        this.context.selectedId = null;\n        onShapeChange();\n      }\n    }\n    setAnnotationState(new DefaultAnnotationState(this.context));\n  };\n\n  private applyDefaultAnnotationSize = (shape: IShape) => {\n    if (this.context.selectedId) {\n      // Don't capture clicks meant to de-select another annotation.\n      return false;\n    }\n    if (\n      !this.context.defaultAnnotationSize ||\n      this.context.defaultAnnotationSize.length !== 2\n    ) {\n      return false;\n    }\n    const [width, height] = this.context.defaultAnnotationSize;\n    shape.adjustMark({\n      width,\n      height,\n    });\n    return true;\n  };\n\n  public onMouseLeave = () => this.onMouseUp();\n}\n","import { ReactPictureAnnotation } from \"index\";\nimport { IAnnotationState } from \"./AnnotationState\";\nimport { DefaultAnnotationState } from \"./DefaultAnnotationState\";\n\nexport default class DraggingAnnotationState implements IAnnotationState {\n  private readonly context: ReactPictureAnnotation;\n  constructor(context: ReactPictureAnnotation) {\n    this.context = context;\n  }\n  public onMouseDown = () => undefined;\n  public onMouseMove = (positionX: number, positionY: number) => {\n    const { shapes } = this.context;\n    const currentShape = shapes[shapes.length - 1];\n    currentShape.onDrag(positionX, positionY);\n  };\n\n  public onMouseUp = () => {\n    const { setAnnotationState } = this.context;\n    setAnnotationState(new DefaultAnnotationState(this.context));\n  };\n\n  public onMouseLeave = () => this.onMouseUp();\n}\n","import { ReactPictureAnnotation } from \"index\";\nimport { IAnnotationState } from \"./AnnotationState\";\nimport { DefaultAnnotationState } from \"./DefaultAnnotationState\";\n\nexport default class TransformationState implements IAnnotationState {\n  private readonly context: ReactPictureAnnotation;\n  constructor(context: ReactPictureAnnotation) {\n    this.context = context;\n  }\n  public onMouseDown = () => undefined;\n  public onMouseMove = (positionX: number, positionY: number) => {\n    const { currentTransformer } = this.context;\n    if (currentTransformer) {\n      currentTransformer.onTransformation(positionX, positionY);\n    }\n  };\n\n  public onMouseUp = () => {\n    const { setAnnotationState } = this.context;\n    setAnnotationState(new DefaultAnnotationState(this.context));\n  };\n\n  public onMouseLeave = () => this.onMouseUp();\n}\n","import ReactPictureAnnotation from \"../ReactPictureAnnotation\";\nimport { RectShape } from \"../Shape\";\nimport Transformer from \"../Transformer\";\nimport randomId from \"../utils/randomId\";\nimport { IAnnotationState } from \"./AnnotationState\";\nimport CreatingAnnotationState from \"./CreatingAnnotationState\";\nimport DraggingAnnotationState from \"./DraggingAnnotationState\";\nimport TransformationState from \"./TransfromationState\";\n\nexport class DefaultAnnotationState implements IAnnotationState {\n  private readonly context: ReactPictureAnnotation;\n  constructor(context: ReactPictureAnnotation) {\n    this.context = context;\n  }\n\n  public onMouseMove = () => undefined;\n  public onMouseUp = () => undefined;\n  public onMouseLeave = () => undefined;\n\n  public onMouseDown = (positionX: number, positionY: number) => {\n    const {\n      shapes,\n      currentTransformer,\n      onShapeChange,\n      setAnnotationState: setState,\n    } = this.context;\n\n    if (\n      currentTransformer &&\n      currentTransformer.checkBoundary(positionX, positionY)\n    ) {\n      currentTransformer.startTransformation(positionX, positionY);\n      setState(new TransformationState(this.context));\n      return;\n    }\n\n    for (let i = shapes.length - 1; i >= 0; i--) {\n      if (shapes[i].checkBoundary(positionX, positionY)) {\n        this.context.selectedId = shapes[i].getAnnotationData().id;\n        this.context.currentTransformer = new Transformer(\n          shapes[i],\n          this.context.scaleState.scale\n        );\n        const [selectedShape] = shapes.splice(i, 1);\n        shapes.push(selectedShape);\n        selectedShape.onDragStart(positionX, positionY);\n        onShapeChange();\n        setState(new DraggingAnnotationState(this.context));\n        return;\n      }\n    }\n    this.context.shapes.push(\n      new RectShape(\n        {\n          id: randomId(),\n          mark: {\n            x: positionX,\n            y: positionY,\n            width: 0,\n            height: 0,\n            type: \"RECT\",\n          },\n        },\n        onShapeChange,\n        this.context.annotationStyle\n      )\n    );\n\n    setState(new CreatingAnnotationState(this.context));\n  };\n}\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <svg\n      className=\"rp-delete\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n    >\n      <g data-name=\"Layer 2\">\n        <g data-name=\"trash-2\">\n          <rect width=\"24\" height=\"24\" opacity=\"0\" />\n          <path d=\"M21 6h-5V4.33A2.42 2.42 0 0 0 13.5 2h-3A2.42 2.42 0 0 0 8 4.33V6H3a1 1 0 0 0 0 2h1v11a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V8h1a1 1 0 0 0 0-2zM10 16a1 1 0 0 1-2 0v-4a1 1 0 0 1 2 0zm0-11.67c0-.16.21-.33.5-.33h3c.29 0 .5.17.5.33V6h-4zM16 16a1 1 0 0 1-2 0v-4a1 1 0 0 1 2 0z\" />\n        </g>\n      </g>\n    </svg>\n  );\n};\n","import React from \"react\";\nimport DeleteButton from \"./DeleteButton\";\n\nexport interface IDefaultInputSection {\n  value: string;\n  placeholder?: string;\n  onChange: (value: string) => void;\n  onDelete: () => void;\n}\n\nexport default ({\n  value,\n  onChange,\n  onDelete,\n  placeholder = \"INPUT TAG HERE\",\n}: IDefaultInputSection) => {\n  return (\n    <div className=\"rp-default-input-section\">\n      <input\n        className=\"rp-default-input-section_input\"\n        placeholder={placeholder}\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n      />\n      <a className=\"rp-default-input-section_delete\" onClick={() => onDelete()}>\n        <DeleteButton />\n      </a>\n    </div>\n  );\n};\n","import React, { MouseEventHandler } from \"react\";\nimport { IAnnotation } from \"./Annotation\";\nimport { IAnnotationState } from \"./annotation/AnnotationState\";\nimport { DefaultAnnotationState } from \"./annotation/DefaultAnnotationState\";\nimport DefaultInputSection from \"./DefaultInputSection\";\n// import DeleteButton from \"./DeleteButton\";\nimport {\n  defaultShapeStyle,\n  IShape,\n  IShapeBase,\n  IShapeStyle,\n  RectShape,\n} from \"./Shape\";\nimport Transformer, { ITransformer } from \"./Transformer\";\n\ninterface IReactPictureAnnotationProps {\n  annotationData?: IAnnotation[];\n  selectedId?: string | null;\n  scrollSpeed: number;\n  marginWithInput: number;\n  onChange: (annotationData: IAnnotation[]) => void;\n  onSelect: (id: string | null) => void;\n  width: number;\n  height: number;\n  image: string;\n  annotationStyle: IShapeStyle;\n  defaultAnnotationSize?: number[];\n  inputElement: (\n    value: string,\n    onChange: (value: string) => void,\n    onDelete: () => void\n  ) => React.ReactElement;\n}\n\ninterface IStageState {\n  scale: number;\n  originX: number;\n  originY: number;\n}\n\nconst defaultState: IStageState = {\n  scale: 1,\n  originX: 0,\n  originY: 0,\n};\n\nexport default class ReactPictureAnnotation extends React.Component<\n  IReactPictureAnnotationProps\n> {\n  public static defaultProps = {\n    marginWithInput: 10,\n    scrollSpeed: 0.0005,\n    annotationStyle: defaultShapeStyle,\n    inputElement: (\n      value: string,\n      onChange: (value: string) => void,\n      onDelete: () => void\n    ) => (\n      <DefaultInputSection\n        value={value}\n        onChange={onChange}\n        onDelete={onDelete}\n      />\n    ),\n  };\n\n  public state = {\n    inputPosition: {\n      left: 0,\n      top: 0,\n    },\n    showInput: false,\n    inputComment: \"\",\n  };\n\n  set selectedId(value: string | null) {\n    const { onSelect } = this.props;\n    this.selectedIdTrueValue = value;\n    onSelect(value);\n  }\n\n  get selectedId() {\n    return this.selectedIdTrueValue;\n  }\n\n  get annotationStyle() {\n    return this.props.annotationStyle;\n  }\n\n  get defaultAnnotationSize() {\n    return this.props.defaultAnnotationSize;\n  }\n\n  public shapes: IShape[] = [];\n  public scaleState = defaultState;\n  public currentTransformer: ITransformer;\n\n  private currentAnnotationData: IAnnotation[] = [];\n  private selectedIdTrueValue: string | null;\n  private canvasRef = React.createRef<HTMLCanvasElement>();\n  private canvas2D?: CanvasRenderingContext2D | null;\n  private imageCanvasRef = React.createRef<HTMLCanvasElement>();\n  private imageCanvas2D?: CanvasRenderingContext2D | null;\n  private currentImageElement?: HTMLImageElement;\n  private currentAnnotationState: IAnnotationState = new DefaultAnnotationState(\n    this\n  );\n\n  public componentDidMount = () => {\n    const currentCanvas = this.canvasRef.current;\n    const currentImageCanvas = this.imageCanvasRef.current;\n    if (currentCanvas && currentImageCanvas) {\n      this.setCanvasDPI();\n\n      this.canvas2D = currentCanvas.getContext(\"2d\");\n      this.imageCanvas2D = currentImageCanvas.getContext(\"2d\");\n      this.onImageChange();\n    }\n\n    this.syncAnnotationData();\n    this.syncSelectedId();\n  };\n\n  public componentDidUpdate = (preProps: IReactPictureAnnotationProps) => {\n    const { width, height, image } = this.props;\n    if (preProps.width !== width || preProps.height !== height) {\n      this.setCanvasDPI();\n      this.onShapeChange();\n      this.onImageChange();\n    }\n    if (preProps.image !== image) {\n      this.cleanImage();\n      if (this.currentImageElement) {\n        this.currentImageElement.src = image;\n      } else {\n        this.onImageChange();\n      }\n    }\n\n    this.syncAnnotationData();\n    this.syncSelectedId();\n  };\n\n  public calculateMousePosition = (positionX: number, positionY: number) => {\n    const { originX, originY, scale } = this.scaleState;\n    return {\n      positionX: (positionX - originX) / scale,\n      positionY: (positionY - originY) / scale,\n    };\n  };\n\n  public calculateShapePosition = (shapeData: IShapeBase): IShapeBase => {\n    const { originX, originY, scale } = this.scaleState;\n    const { x, y, width, height } = shapeData;\n    return {\n      x: x * scale + originX,\n      y: y * scale + originY,\n      width: width * scale,\n      height: height * scale,\n    };\n  };\n\n  public render() {\n    const { width, height, inputElement } = this.props;\n    const { showInput, inputPosition, inputComment } = this.state;\n    return (\n      <div className=\"rp-stage\">\n        <canvas\n          style={{ width, height }}\n          className=\"rp-image\"\n          ref={this.imageCanvasRef}\n          width={width * 2}\n          height={height * 2}\n        />\n        <canvas\n          className=\"rp-shapes\"\n          style={{ width, height }}\n          ref={this.canvasRef}\n          width={width * 2}\n          height={height * 2}\n          onMouseDown={this.onMouseDown}\n          onMouseMove={this.onMouseMove}\n          onMouseUp={this.onMouseUp}\n          onMouseLeave={this.onMouseLeave}\n          onWheel={this.onWheel}\n        />\n        {showInput && (\n          <div className=\"rp-selected-input\" style={inputPosition}>\n            {inputElement(\n              inputComment,\n              this.onInputCommentChange,\n              this.onDelete\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  public setAnnotationState = (annotationState: IAnnotationState) => {\n    this.currentAnnotationState = annotationState;\n  };\n\n  public onShapeChange = () => {\n    if (this.canvas2D && this.canvasRef.current) {\n      this.canvas2D.clearRect(\n        0,\n        0,\n        this.canvasRef.current.width,\n        this.canvasRef.current.height\n      );\n\n      let hasSelectedItem = false;\n\n      for (const item of this.shapes) {\n        const isSelected = item.getAnnotationData().id === this.selectedId;\n        const { x, y, height } = item.paint(\n          this.canvas2D,\n          this.calculateShapePosition,\n          isSelected\n        );\n\n        if (isSelected) {\n          if (!this.currentTransformer) {\n            this.currentTransformer = new Transformer(\n              item,\n              this.scaleState.scale\n            );\n          }\n\n          hasSelectedItem = true;\n\n          this.currentTransformer.paint(\n            this.canvas2D,\n            this.calculateShapePosition,\n            this.scaleState.scale\n          );\n\n          this.setState({\n            showInput: true,\n            inputPosition: {\n              left: x,\n              top: y + height + this.props.marginWithInput,\n            },\n            inputComment: item.getAnnotationData().comment || \"\",\n          });\n        }\n      }\n\n      if (!hasSelectedItem) {\n        this.setState({\n          showInput: false,\n          inputComment: \"\",\n        });\n      }\n    }\n\n    this.currentAnnotationData = this.shapes.map((item) =>\n      item.getAnnotationData()\n    );\n    const { onChange } = this.props;\n    onChange(this.currentAnnotationData);\n  };\n\n  private syncAnnotationData = () => {\n    const { annotationData } = this.props;\n    if (annotationData) {\n      const refreshShapesWithAnnotationData = () => {\n        this.selectedId = null;\n        this.shapes = annotationData.map(\n          (eachAnnotationData) =>\n            new RectShape(\n              eachAnnotationData,\n              this.onShapeChange,\n              this.annotationStyle\n            )\n        );\n        this.onShapeChange();\n      };\n\n      if (annotationData.length !== this.shapes.length) {\n        refreshShapesWithAnnotationData();\n      } else {\n        for (const annotationDataItem of annotationData) {\n          const targetShape = this.shapes.find(\n            (item) => item.getAnnotationData().id === annotationDataItem.id\n          );\n          if (targetShape && targetShape.equal(annotationDataItem)) {\n            continue;\n          } else {\n            refreshShapesWithAnnotationData();\n            break;\n          }\n        }\n      }\n    }\n  };\n\n  private syncSelectedId = () => {\n    const { selectedId } = this.props;\n\n    if (selectedId && selectedId !== this.selectedId) {\n      this.selectedId = selectedId;\n      this.onShapeChange();\n    }\n  };\n\n  private onDelete = () => {\n    const deleteTarget = this.shapes.findIndex(\n      (shape) => shape.getAnnotationData().id === this.selectedId\n    );\n    if (deleteTarget >= 0) {\n      this.shapes.splice(deleteTarget, 1);\n      this.onShapeChange();\n    }\n  };\n\n  private setCanvasDPI = () => {\n    const currentCanvas = this.canvasRef.current;\n    const currentImageCanvas = this.imageCanvasRef.current;\n    if (currentCanvas && currentImageCanvas) {\n      const currentCanvas2D = currentCanvas.getContext(\"2d\");\n      const currentImageCanvas2D = currentImageCanvas.getContext(\"2d\");\n      if (currentCanvas2D && currentImageCanvas2D) {\n        currentCanvas2D.scale(2, 2);\n        currentImageCanvas2D.scale(2, 2);\n      }\n    }\n  };\n\n  private onInputCommentChange = (comment: string) => {\n    const selectedShapeIndex = this.shapes.findIndex(\n      (item) => item.getAnnotationData().id === this.selectedId\n    );\n    this.shapes[selectedShapeIndex].setComment(comment);\n    this.setState({ inputComment: comment });\n  };\n\n  private cleanImage = () => {\n    if (this.imageCanvas2D && this.imageCanvasRef.current) {\n      this.imageCanvas2D.clearRect(\n        0,\n        0,\n        this.imageCanvasRef.current.width,\n        this.imageCanvasRef.current.height\n      );\n    }\n  };\n\n  private onImageChange = () => {\n    this.cleanImage();\n    if (this.imageCanvas2D && this.imageCanvasRef.current) {\n      if (this.currentImageElement) {\n        const { originX, originY, scale } = this.scaleState;\n        this.imageCanvas2D.drawImage(\n          this.currentImageElement,\n          originX,\n          originY,\n          this.currentImageElement.width * scale,\n          this.currentImageElement.height * scale\n        );\n      } else {\n        const nextImageNode = document.createElement(\"img\");\n        nextImageNode.addEventListener(\"load\", () => {\n          this.currentImageElement = nextImageNode;\n          const { width, height } = nextImageNode;\n          const imageNodeRatio = height / width;\n          const { width: canvasWidth, height: canvasHeight } = this.props;\n          const canvasNodeRatio = canvasHeight / canvasWidth;\n          if (!isNaN(imageNodeRatio) && !isNaN(canvasNodeRatio)) {\n            if (imageNodeRatio < canvasNodeRatio) {\n              const scale = canvasWidth / width;\n              this.scaleState = {\n                originX: 0,\n                originY: (canvasHeight - scale * height) / 2,\n                scale,\n              };\n            } else {\n              const scale = canvasHeight / height;\n              this.scaleState = {\n                originX: (canvasWidth - scale * width) / 2,\n                originY: 0,\n                scale,\n              };\n            }\n          }\n          this.onImageChange();\n          this.onShapeChange();\n        });\n        nextImageNode.alt = \"\";\n        nextImageNode.src = this.props.image;\n      }\n    }\n  };\n\n  private onMouseDown: MouseEventHandler<HTMLCanvasElement> = (event) => {\n    const { offsetX, offsetY } = event.nativeEvent;\n    const { positionX, positionY } = this.calculateMousePosition(\n      offsetX,\n      offsetY\n    );\n    this.currentAnnotationState.onMouseDown(positionX, positionY);\n  };\n\n  private onMouseMove: MouseEventHandler<HTMLCanvasElement> = (event) => {\n    const { offsetX, offsetY } = event.nativeEvent;\n    const { positionX, positionY } = this.calculateMousePosition(\n      offsetX,\n      offsetY\n    );\n    this.currentAnnotationState.onMouseMove(positionX, positionY);\n  };\n\n  private onMouseUp: MouseEventHandler<HTMLCanvasElement> = () => {\n    this.currentAnnotationState.onMouseUp();\n  };\n\n  private onMouseLeave: MouseEventHandler<HTMLCanvasElement> = () => {\n    this.currentAnnotationState.onMouseLeave();\n  };\n\n  private onWheel = (event: React.WheelEvent<HTMLCanvasElement>) => {\n    // https://stackoverflow.com/a/31133823/9071503\n    const { clientHeight, scrollTop, scrollHeight } = event.currentTarget;\n    if (clientHeight + scrollTop + event.deltaY > scrollHeight) {\n      // event.preventDefault();\n      event.currentTarget.scrollTop = scrollHeight;\n    } else if (scrollTop + event.deltaY < 0) {\n      // event.preventDefault();\n      event.currentTarget.scrollTop = 0;\n    }\n\n    const { scale: preScale } = this.scaleState;\n    this.scaleState.scale += event.deltaY * this.props.scrollSpeed;\n    if (this.scaleState.scale > 10) {\n      this.scaleState.scale = 10;\n    }\n    if (this.scaleState.scale < 0.1) {\n      this.scaleState.scale = 0.1;\n    }\n\n    const { originX, originY, scale } = this.scaleState;\n    const { offsetX, offsetY } = event.nativeEvent;\n    this.scaleState.originX =\n      offsetX - ((offsetX - originX) / preScale) * scale;\n    this.scaleState.originY =\n      offsetY - ((offsetY - originY) / preScale) * scale;\n\n    this.setState({ imageScale: this.scaleState });\n\n    requestAnimationFrame(() => {\n      this.onShapeChange();\n      this.onImageChange();\n    });\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
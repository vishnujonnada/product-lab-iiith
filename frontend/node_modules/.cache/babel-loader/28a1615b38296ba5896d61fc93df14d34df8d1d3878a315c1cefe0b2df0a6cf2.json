{"ast":null,"code":"// import React, { useState } from 'react';\n// import { Stage, Layer, Image, Rect } from 'react-konva';\n// import useImage from 'use-image';\n// import { FaTrash } from 'react-icons/fa';\n\n// const AnnotateImage = ({ imageUrl }) => {\n//   const [image] = useImage(imageUrl);\n//   const [rectangles, setRectangles] = useState([]);\n//   const isDrawing = React.useRef(false);\n//   const [rectangleTexts, setRectangleTexts] = useState([]);\n\n//   const handleMouseDown = (e) => {\n//     isDrawing.current = true;\n//     const x = e.evt.x;\n//     const y = e.evt.y;\n//     setRectangles([...rectangles, { x, y, width: 0, height: 0 }]);\n//     // console.log(`Box started: x=${x}, y=${y}`);\n//     setRectangles([...rectangles, { x, y, width: 0, height: 0 }]);\n//     setRectangleTexts([...rectangleTexts, '']);\n\n//   };\n\n//   const handleTextChange = (e, index) => {\n//     const newRectangleTexts = [...rectangleTexts];\n//     newRectangleTexts[index] = e.target.value;\n//     setRectangleTexts(newRectangleTexts);\n//   };\n\n//   const handleMouseMove = (e) => {\n//     if (!isDrawing.current) {\n//       return;\n//     }\n//     const currentRect = rectangles[rectangles.length - 1];\n//     currentRect.width = e.evt.x - currentRect.x;\n//     currentRect.height = e.evt.y - currentRect.y;\n\n//     const newRectangles = rectangles.slice(0, rectangles.length - 1);\n//     newRectangles.push(currentRect);\n//     setRectangles(newRectangles);\n//   };\n\n//   const handleMouseUp = () => {\n//     isDrawing.current = false;\n//   };\n\n//   return (\n//     <Stage\n//       width={window.innerWidth}\n//       height={window.innerHeight}\n//       onMouseDown={handleMouseDown}\n//       onMousemove={handleMouseMove}\n//       onMouseup={handleMouseUp}\n//     >\n//       <Layer>\n//         <Image image={image} />\n//         {rectangles.map((rect, i) => (\n//           <Rect\n//             key={i}\n//             x={rect.x}\n//             y={rect.y}\n//             width={rect.width}\n//             height={rect.height}\n//             stroke=\"red\"\n//             strokeWidth={2}\n//             draggable\n//           />\n//         ))}\n//       </Layer>\n//     </Stage>\n//   );\n// };\n\n// export default AnnotateImage;","map":{"version":3,"names":[],"sources":["/home/vishnapanyala/Desktop/myapp/src/components/annotate.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { Stage, Layer, Image, Rect } from 'react-konva';\n// import useImage from 'use-image';\n// import { FaTrash } from 'react-icons/fa';\n\n\n// const AnnotateImage = ({ imageUrl }) => {\n//   const [image] = useImage(imageUrl);\n//   const [rectangles, setRectangles] = useState([]);\n//   const isDrawing = React.useRef(false);\n//   const [rectangleTexts, setRectangleTexts] = useState([]);\n\n\n//   const handleMouseDown = (e) => {\n//     isDrawing.current = true;\n//     const x = e.evt.x;\n//     const y = e.evt.y;\n//     setRectangles([...rectangles, { x, y, width: 0, height: 0 }]);\n//     // console.log(`Box started: x=${x}, y=${y}`);\n//     setRectangles([...rectangles, { x, y, width: 0, height: 0 }]);\n//     setRectangleTexts([...rectangleTexts, '']);\n\n\n//   };\n\n//   const handleTextChange = (e, index) => {\n//     const newRectangleTexts = [...rectangleTexts];\n//     newRectangleTexts[index] = e.target.value;\n//     setRectangleTexts(newRectangleTexts);\n//   };\n\n\n//   const handleMouseMove = (e) => {\n//     if (!isDrawing.current) {\n//       return;\n//     }\n//     const currentRect = rectangles[rectangles.length - 1];\n//     currentRect.width = e.evt.x - currentRect.x;\n//     currentRect.height = e.evt.y - currentRect.y;\n\n//     const newRectangles = rectangles.slice(0, rectangles.length - 1);\n//     newRectangles.push(currentRect);\n//     setRectangles(newRectangles);\n//   };\n\n//   const handleMouseUp = () => {\n//     isDrawing.current = false;\n//   };\n\n//   return (\n//     <Stage\n//       width={window.innerWidth}\n//       height={window.innerHeight}\n//       onMouseDown={handleMouseDown}\n//       onMousemove={handleMouseMove}\n//       onMouseup={handleMouseUp}\n//     >\n//       <Layer>\n//         <Image image={image} />\n//         {rectangles.map((rect, i) => (\n//           <Rect\n//             key={i}\n//             x={rect.x}\n//             y={rect.y}\n//             width={rect.width}\n//             height={rect.height}\n//             stroke=\"red\"\n//             strokeWidth={2}\n//             draggable\n//           />\n//         ))}\n//       </Layer>\n//     </Stage>\n//   );\n// };\n\n// export default AnnotateImage;"],"mappings":"AAAA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
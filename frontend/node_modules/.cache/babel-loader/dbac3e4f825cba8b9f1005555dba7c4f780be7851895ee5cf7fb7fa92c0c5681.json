{"ast":null,"code":"var _jsxFileName = \"/home/vishnapanyala/Desktop/myapp/src/components/viewimages.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './viewimages.css';\nimport { BASE_URL } from './config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageViewGrid = _ref => {\n  _s();\n  let {\n    token,\n    requestID\n  } = _ref;\n  const [images, setImages] = useState([]);\n  const fetchImages = async () => {\n    try {\n      const response = await fetch(BASE_URL + '/getImageViewImagesByRequestID', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-access-token': token\n        },\n        body: JSON.stringify({\n          requestID: requestID\n        })\n      });\n      console.log(requestID);\n      const data = await response.json();\n      console.log(data);\n      if (response.status === 401) {\n        // Token is missing or invalid, show the error message\n        alert(data.message);\n        // Redirect to '/login'\n        window.location.href = '/login';\n        return; // Stop further execution\n      }\n\n      setImages(data.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    fetchImages();\n  }, [token, requestID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-grid\",\n    children: images.map(image => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image.url,\n      alt: `Image ${image.id}`\n    }, image.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageViewGrid, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n_c = ImageViewGrid;\nexport default ImageViewGrid;\nvar _c;\n$RefreshReg$(_c, \"ImageViewGrid\");","map":{"version":3,"names":["React","useState","useEffect","BASE_URL","jsxDEV","_jsxDEV","ImageViewGrid","_ref","_s","token","requestID","images","setImages","fetchImages","response","fetch","method","headers","body","JSON","stringify","console","log","data","json","status","alert","message","window","location","href","error","className","children","map","image","src","url","alt","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/vishnapanyala/Desktop/myapp/src/components/viewimages.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './viewimages.css'; \nimport { BASE_URL } from './config';\n\nconst ImageViewGrid = ({ token, requestID }) => {\n  const [images, setImages] = useState([]);\n\n  const fetchImages = async () => {\n    try {\n      const response = await fetch(BASE_URL + '/getImageViewImagesByRequestID', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'x-access-token': token,\n        },\n        body: JSON.stringify({\n          requestID: requestID,\n        }),\n      });\n      console.log(requestID);\n      const data = await response.json();\n\n      console.log(data);\n      if (response.status === 401) {\n        // Token is missing or invalid, show the error message\n        alert(data.message);\n        // Redirect to '/login'\n        window.location.href = '/login';\n        return; // Stop further execution\n      }\n\n      setImages(data.data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchImages();\n  }, [token, requestID]);\n\n  return (\n    <div className=\"image-grid\">\n      {images.map((image) => (\n        <img key={image.id} src={image.url} alt={`Image ${image.id}`} />\n      ))}\n    </div>\n  );\n};\n\nexport default ImageViewGrid;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,kBAAkB;AACzB,SAASC,QAAQ,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,aAAa,GAAGC,IAAA,IAA0B;EAAAC,EAAA;EAAA,IAAzB;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAAH,IAAA;EACzC,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACZ,QAAQ,GAAG,gCAAgC,EAAE;QACxEa,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,gBAAgB,EAAER;QACpB,CAAC;QACDS,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBV,SAAS,EAAEA;QACb,CAAC;MACH,CAAC,CAAC;MACFW,OAAO,CAACC,GAAG,CAACZ,SAAS,CAAC;MACtB,MAAMa,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAElCH,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;MACjB,IAAIT,QAAQ,CAACW,MAAM,KAAK,GAAG,EAAE;QAC3B;QACAC,KAAK,CAACH,IAAI,CAACI,OAAO,CAAC;QACnB;QACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;QAC/B,OAAO,CAAC;MACV;;MAEAlB,SAAS,CAACW,IAAI,CAACA,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdV,OAAO,CAACU,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED7B,SAAS,CAAC,MAAM;IACdW,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACJ,KAAK,EAAEC,SAAS,CAAC,CAAC;EAEtB,oBACEL,OAAA;IAAK2B,SAAS,EAAC,YAAY;IAAAC,QAAA,EACxBtB,MAAM,CAACuB,GAAG,CAAEC,KAAK,iBAChB9B,OAAA;MAAoB+B,GAAG,EAAED,KAAK,CAACE,GAAI;MAACC,GAAG,EAAG,SAAQH,KAAK,CAACI,EAAG;IAAE,GAAnDJ,KAAK,CAACI,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA6C,CAChE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnC,EAAA,CA5CIF,aAAa;AAAAsC,EAAA,GAAbtC,aAAa;AA8CnB,eAAeA,aAAa;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import './imageannotation.css';\n// import { useParams } from 'react-router-dom';\n\n// const ImageAnnotation = () => {\n//   const { requestID } = useParams();\n//   const [images, setImages] = useState([]);\n//   const [selectedImage, setSelectedImage] = useState(null);\n//   const [labels, setLabels] = useState([]);\n//   const [selectedLabels, setSelectedLabels] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch images from API\n//     fetchImages();\n//   }, [requestID]);\n\n//   const fetchImages = async () => {\n//     try {\n//       const response = await fetch('http://10.2.138.98:5000/getImageThumbnailsByRequestID', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({\n//           requestID: requestID\n//         })\n//       });\n//       const data = await response.json();\n//       setImages(data.data);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   const handleImageClick = async (image) => {\n//     try {\n//       const response = await fetch('http://10.2.138.98:5000/getImageByImageID', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({\n//           imageID: image.imageID\n//         })\n//       });\n//       const data = await response.json();\n//       setSelectedImage(data);\n//       setSelectedLabels([]);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   const handleLabelToggle = (label) => {\n//     const updatedSelectedLabels = selectedLabels.includes(label)\n//       ? selectedLabels.filter((selectedLabel) => selectedLabel !== label)\n//       : [...selectedLabels, label];\n\n//     setSelectedLabels(updatedSelectedLabels);\n//   };\n\n//   const handleDoneClick = () => {\n//     // Perform logic to save selected labels for the selected image\n//     console.log('Selected Labels:', selectedLabels);\n//   };\n\n//   const handleResetClick = () => {\n//     setSelectedLabels([]);\n//   };\n\n//   return (\n//     <div className=\"image-annotation-container\">\n//       <div className=\"image-list\">\n//         {images.map((image) => (\n//           <div\n//             key={image.imageID}\n//             className={`image-thumbnail ${selectedImage && selectedImage.imageID === image.imageID ? 'selected' : ''}`}\n//             onClick={() => handleImageClick(image)}\n//           >\n//             <img src={`data:image/jpeg;base64,${image.imageThumbnail}`} alt={`Image ${image.imageID}`} />\n//           </div>\n//         ))}\n//       </div>\n//       <div className=\"annotation-section\">\n//         {selectedImage && (\n//           <div className=\"selected-image\">\n//             <img src={`data:image/jpeg;base64,${selectedImage.base64Image}`} alt={`Selected Image`} />\n//           </div>\n//         )}\n//         <div className=\"label-section\">\n//           <h3>Labels</h3>\n//           {labels.map((label) => (\n//             <div\n//               key={label.id}\n//               className={`label ${selectedLabels.includes(label) ? 'selected' : ''}`}\n//               onClick={() => handleLabelToggle(label)}\n//             >\n//               {label.name}\n//             </div>\n//           ))}\n//         </div>\n//         <div className=\"button-section\">\n//           <button className=\"done-button\" onClick={handleDoneClick}>Done</button>\n//           <button className=\"reset-button\" onClick={handleResetClick}>Reset</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ImageAnnotation;\n\n// import React, { useState, useEffect } from 'react';\n// import './imageannotation.css';\n// import { useParams } from 'react-router-dom';\n// import { ReactPictureAnnotation } from 'react-picture-annotation';\n\n// const ImageAnnotation = () => {\n//   const { requestID } = useParams();\n//   const [images, setImages] = useState([]);\n//   const [selectedImage, setSelectedImage] = useState(null);\n//   const [labels, setLabels] = useState([]);\n//   const [selectedLabels, setSelectedLabels] = useState([]);\n//   const [annotations, setAnnotations] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch images and labels from API\n//     fetchImages();\n//     // fetchLabels();\n//   }, [requestID]);\n\n//   const fetchImages = async () => {\n//     try {\n//       const response = await fetch('http://10.2.138.98:5000/getImageThumbnailsByRequestID', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({\n//           requestID: requestID\n//         })\n//       });\n//       const data = await response.json();\n//       setImages(data.data);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   // const fetchLabels = async () => {\n//   //   try {\n//   //     const response = await fetch('http://10.2.132.147:5000/getLabels', {\n//   //       method: 'GET',\n//   //       headers: {\n//   //         'Content-Type': 'application/json'\n//   //       }\n//   //     });\n//   //     const data = await response.json();\n//   //     setLabels(data.labels);\n//   //   } catch (error) {\n//   //     console.error(error);\n//   //   }\n//   // };\n\n//   const handleImageClick = async (image) => {\n//     try {\n//       const response = await fetch('http://10.2.138.98:5000/getImageByImageID', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({\n//           imageID: image.imageID\n//         })\n//       });\n//       const data = await response.json();\n//       setSelectedImage(data);\n//       setSelectedLabels([]);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   const handleLabelToggle = (label) => {\n//     const updatedSelectedLabels = selectedLabels.includes(label)\n//       ? selectedLabels.filter((selectedLabel) => selectedLabel !== label)\n//       : [...selectedLabels, label];\n\n//     setSelectedLabels(updatedSelectedLabels);\n//   };\n\n//   const handleDoneClick = () => {\n//     // Perform logic to save selected labels for the selected image\n//     console.log('Selected Labels:', selectedLabels);\n//   };\n\n//   const handleResetClick = () => {\n//     setSelectedLabels([]);\n//   };\n\n//   const handleAnnotationSelect = (selectedId) => {\n//     console.log('Selected Annotation ID:', selectedId);\n//   };\n\n//   const handleAnnotationChange = (data) => {\n//     setAnnotations(data);\n//     console.log('Annotations:', data);\n//   };\n\n//   return (\n//     <div className=\"image-annotation-container\">\n//       <div className=\"image-list\">\n//         {images.map((image) => (\n//           <div\n//             key={image.imageID}\n//             className={`image-thumbnail ${selectedImage && selectedImage.imageID === image.imageID ? 'selected' : ''}`}\n//             onClick={() => handleImageClick(image)}\n//           >\n//             <img src={`data:image/jpeg;base64,${image.imageThumbnail}`} alt={`Image ${image.imageID}`} />\n//           </div>\n//         ))}\n//       </div>\n//       <div className=\"annotation-section\">\n//         {selectedImage && (\n//           <div className=\"selected-image\">\n//             <ReactPictureAnnotation\n//               image={`data:image/jpeg;base64,${selectedImage.base64Image}`}\n//               onSelect={handleAnnotationSelect}\n//               onChange={handleAnnotationChange}\n//               width={selectedImage.width}\n//               height={selectedImage.height}\n//               annotations={annotations}\n//             />\n//           </div>\n//         )}\n//         <div className=\"label-section\">\n//           <h3>Labels</h3>\n//           {labels.map((label) => (\n//             <div\n//               key={label.id}\n//               className={`label ${selectedLabels.includes(label) ? 'selected' : ''}`}\n//               onClick={() => handleLabelToggle(label)}\n//             >\n//               {label.name}\n//             </div>\n//           ))}\n//         </div>\n//         <div className=\"button-section\">\n//           <button className=\"done-button\" onClick={handleDoneClick}>\n//             Done\n//           </button>\n//           <button className=\"reset-button\" onClick={handleResetClick}>\n//             Reset\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ImageAnnotation;","map":{"version":3,"names":[],"sources":["/home/vishnapanyala/Desktop/myapp/src/components/imageannotation.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import './imageannotation.css';\n// import { useParams } from 'react-router-dom';\n\n\n// const ImageAnnotation = () => {\n//   const { requestID } = useParams();\n//   const [images, setImages] = useState([]);\n//   const [selectedImage, setSelectedImage] = useState(null);\n//   const [labels, setLabels] = useState([]);\n//   const [selectedLabels, setSelectedLabels] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch images from API\n//     fetchImages();\n//   }, [requestID]);\n\n//   const fetchImages = async () => {\n//     try {\n//       const response = await fetch('http://10.2.138.98:5000/getImageThumbnailsByRequestID', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({\n//           requestID: requestID\n//         })\n//       });\n//       const data = await response.json();\n//       setImages(data.data);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   const handleImageClick = async (image) => {\n//     try {\n//       const response = await fetch('http://10.2.138.98:5000/getImageByImageID', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({\n//           imageID: image.imageID\n//         })\n//       });\n//       const data = await response.json();\n//       setSelectedImage(data);\n//       setSelectedLabels([]);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   const handleLabelToggle = (label) => {\n//     const updatedSelectedLabels = selectedLabels.includes(label)\n//       ? selectedLabels.filter((selectedLabel) => selectedLabel !== label)\n//       : [...selectedLabels, label];\n\n//     setSelectedLabels(updatedSelectedLabels);\n//   };\n\n//   const handleDoneClick = () => {\n//     // Perform logic to save selected labels for the selected image\n//     console.log('Selected Labels:', selectedLabels);\n//   };\n\n//   const handleResetClick = () => {\n//     setSelectedLabels([]);\n//   };\n\n//   return (\n//     <div className=\"image-annotation-container\">\n//       <div className=\"image-list\">\n//         {images.map((image) => (\n//           <div\n//             key={image.imageID}\n//             className={`image-thumbnail ${selectedImage && selectedImage.imageID === image.imageID ? 'selected' : ''}`}\n//             onClick={() => handleImageClick(image)}\n//           >\n//             <img src={`data:image/jpeg;base64,${image.imageThumbnail}`} alt={`Image ${image.imageID}`} />\n//           </div>\n//         ))}\n//       </div>\n//       <div className=\"annotation-section\">\n//         {selectedImage && (\n//           <div className=\"selected-image\">\n//             <img src={`data:image/jpeg;base64,${selectedImage.base64Image}`} alt={`Selected Image`} />\n//           </div>\n//         )}\n//         <div className=\"label-section\">\n//           <h3>Labels</h3>\n//           {labels.map((label) => (\n//             <div\n//               key={label.id}\n//               className={`label ${selectedLabels.includes(label) ? 'selected' : ''}`}\n//               onClick={() => handleLabelToggle(label)}\n//             >\n//               {label.name}\n//             </div>\n//           ))}\n//         </div>\n//         <div className=\"button-section\">\n//           <button className=\"done-button\" onClick={handleDoneClick}>Done</button>\n//           <button className=\"reset-button\" onClick={handleResetClick}>Reset</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ImageAnnotation;\n\n\n// import React, { useState, useEffect } from 'react';\n// import './imageannotation.css';\n// import { useParams } from 'react-router-dom';\n// import { ReactPictureAnnotation } from 'react-picture-annotation';\n\n// const ImageAnnotation = () => {\n//   const { requestID } = useParams();\n//   const [images, setImages] = useState([]);\n//   const [selectedImage, setSelectedImage] = useState(null);\n//   const [labels, setLabels] = useState([]);\n//   const [selectedLabels, setSelectedLabels] = useState([]);\n//   const [annotations, setAnnotations] = useState([]);\n\n//   useEffect(() => {\n//     // Fetch images and labels from API\n//     fetchImages();\n//     // fetchLabels();\n//   }, [requestID]);\n\n//   const fetchImages = async () => {\n//     try {\n//       const response = await fetch('http://10.2.138.98:5000/getImageThumbnailsByRequestID', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({\n//           requestID: requestID\n//         })\n//       });\n//       const data = await response.json();\n//       setImages(data.data);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   // const fetchLabels = async () => {\n//   //   try {\n//   //     const response = await fetch('http://10.2.132.147:5000/getLabels', {\n//   //       method: 'GET',\n//   //       headers: {\n//   //         'Content-Type': 'application/json'\n//   //       }\n//   //     });\n//   //     const data = await response.json();\n//   //     setLabels(data.labels);\n//   //   } catch (error) {\n//   //     console.error(error);\n//   //   }\n//   // };\n\n//   const handleImageClick = async (image) => {\n//     try {\n//       const response = await fetch('http://10.2.138.98:5000/getImageByImageID', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({\n//           imageID: image.imageID\n//         })\n//       });\n//       const data = await response.json();\n//       setSelectedImage(data);\n//       setSelectedLabels([]);\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n//   const handleLabelToggle = (label) => {\n//     const updatedSelectedLabels = selectedLabels.includes(label)\n//       ? selectedLabels.filter((selectedLabel) => selectedLabel !== label)\n//       : [...selectedLabels, label];\n\n//     setSelectedLabels(updatedSelectedLabels);\n//   };\n\n//   const handleDoneClick = () => {\n//     // Perform logic to save selected labels for the selected image\n//     console.log('Selected Labels:', selectedLabels);\n//   };\n\n//   const handleResetClick = () => {\n//     setSelectedLabels([]);\n//   };\n\n//   const handleAnnotationSelect = (selectedId) => {\n//     console.log('Selected Annotation ID:', selectedId);\n//   };\n\n//   const handleAnnotationChange = (data) => {\n//     setAnnotations(data);\n//     console.log('Annotations:', data);\n//   };\n\n//   return (\n//     <div className=\"image-annotation-container\">\n//       <div className=\"image-list\">\n//         {images.map((image) => (\n//           <div\n//             key={image.imageID}\n//             className={`image-thumbnail ${selectedImage && selectedImage.imageID === image.imageID ? 'selected' : ''}`}\n//             onClick={() => handleImageClick(image)}\n//           >\n//             <img src={`data:image/jpeg;base64,${image.imageThumbnail}`} alt={`Image ${image.imageID}`} />\n//           </div>\n//         ))}\n//       </div>\n//       <div className=\"annotation-section\">\n//         {selectedImage && (\n//           <div className=\"selected-image\">\n//             <ReactPictureAnnotation\n//               image={`data:image/jpeg;base64,${selectedImage.base64Image}`}\n//               onSelect={handleAnnotationSelect}\n//               onChange={handleAnnotationChange}\n//               width={selectedImage.width}\n//               height={selectedImage.height}\n//               annotations={annotations}\n//             />\n//           </div>\n//         )}\n//         <div className=\"label-section\">\n//           <h3>Labels</h3>\n//           {labels.map((label) => (\n//             <div\n//               key={label.id}\n//               className={`label ${selectedLabels.includes(label) ? 'selected' : ''}`}\n//               onClick={() => handleLabelToggle(label)}\n//             >\n//               {label.name}\n//             </div>\n//           ))}\n//         </div>\n//         <div className=\"button-section\">\n//           <button className=\"done-button\" onClick={handleDoneClick}>\n//             Done\n//           </button>\n//           <button className=\"reset-button\" onClick={handleResetClick}>\n//             Reset\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ImageAnnotation;\n"],"mappings":"AAAA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
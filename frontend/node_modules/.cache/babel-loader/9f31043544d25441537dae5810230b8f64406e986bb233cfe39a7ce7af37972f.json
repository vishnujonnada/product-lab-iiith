{"ast":null,"code":"var _jsxFileName = \"/home/vishnapanyala/Desktop/myapp/src/components/annotate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ReactPictureAnnotation } from 'react-picture-annotation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnnotateImage = () => {\n  _s();\n  const [pageSize, setPageSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const [annotations, setAnnotations] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [labels, setLabels] = useState([]);\n  useEffect(() => {\n    // Fetch images and labels from API\n    fetchImages();\n    fetchLabels();\n  }, []);\n  const fetchImages = async () => {\n    try {\n      const response = await fetch('API_URL'); // Replace 'API_URL' with the actual API endpoint to fetch the images\n      const data = await response.json();\n      // Assuming the response contains an array of images\n      setImages(data.images);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const fetchLabels = async () => {\n    try {\n      const response = await fetch('API_URL'); // Replace 'API_URL' with the actual API endpoint to fetch the labels\n      const data = await response.json();\n      // Assuming the response contains an array of labels\n      setLabels(data.labels);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const onSelect = selectedId => console.log(selectedId);\n  const onChange = data => {\n    setAnnotations(data);\n    data.forEach(annotation => {\n      const {\n        id,\n        mark\n      } = annotation;\n      const {\n        x,\n        y,\n        width,\n        height\n      } = mark;\n      // Calculate normalized values and perform annotation saving logic\n      // ...\n    });\n  };\n\n  const handleDeleteBox = id => {\n    const updatedAnnotations = annotations.filter(annotation => annotation.id !== id);\n    setAnnotations(updatedAnnotations);\n  };\n  const handleImageClick = image => {\n    setSelectedImage(image);\n    setAnnotations([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AnnotateImage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-list\",\n      children: images.map(image => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `image-thumbnail ${selectedImage && selectedImage.id === image.id ? 'selected' : ''}`,\n        onClick: () => handleImageClick(image),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.url,\n          alt: `Image ${image.id}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, image.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"annotation-section\",\n      children: [selectedImage && /*#__PURE__*/_jsxDEV(ReactPictureAnnotation, {\n        image: selectedImage.url,\n        onSelect: onSelect,\n        onChange: onChange,\n        width: pageSize.width,\n        height: pageSize.height,\n        annotations: annotations,\n        renderAnnotation: _ref => {\n          let {\n            annotation\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              left: annotation.position.x,\n              top: annotation.position.y\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: annotation.content,\n              onChange: e => {\n                const updatedAnnotations = [...annotations];\n                const index = updatedAnnotations.findIndex(a => a.id === annotation.id);\n                updatedAnnotations[index].content = e.target.value;\n                setAnnotations(updatedAnnotations);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteBox(annotation.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"label-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Labels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), labels.map(label => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `label ${selectedLabels.includes(label) ? 'selected' : ''}`,\n          onClick: () => handleLabelToggle(label),\n          children: label.name\n        }, label.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"done-button\",\n          onClick: handleDoneClick,\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-button\",\n          onClick: handleResetClick,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(AnnotateImage, \"G2AfwBvBuiRuOAOgs9msx2f/Od8=\");\n_c = AnnotateImage;\nexport default AnnotateImage;\nvar _c;\n$RefreshReg$(_c, \"AnnotateImage\");","map":{"version":3,"names":["React","useState","useEffect","ReactPictureAnnotation","jsxDEV","_jsxDEV","AnnotateImage","_s","pageSize","setPageSize","width","window","innerWidth","height","innerHeight","annotations","setAnnotations","selectedImage","setSelectedImage","labels","setLabels","fetchImages","fetchLabels","response","fetch","data","json","setImages","images","error","console","onSelect","selectedId","log","onChange","forEach","annotation","id","mark","x","y","handleDeleteBox","updatedAnnotations","filter","handleImageClick","image","className","children","map","onClick","src","url","alt","fileName","_jsxFileName","lineNumber","columnNumber","renderAnnotation","_ref","style","position","left","top","type","value","content","e","index","findIndex","a","target","label","selectedLabels","includes","handleLabelToggle","name","handleDoneClick","handleResetClick","_c","$RefreshReg$"],"sources":["/home/vishnapanyala/Desktop/myapp/src/components/annotate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ReactPictureAnnotation } from 'react-picture-annotation';\n\nconst AnnotateImage = () => {\n  const [pageSize, setPageSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const [annotations, setAnnotations] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [labels, setLabels] = useState([]);\n\n  useEffect(() => {\n    // Fetch images and labels from API\n    fetchImages();\n    fetchLabels();\n  }, []);\n\n  const fetchImages = async () => {\n    try {\n      const response = await fetch('API_URL'); // Replace 'API_URL' with the actual API endpoint to fetch the images\n      const data = await response.json();\n      // Assuming the response contains an array of images\n      setImages(data.images);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchLabels = async () => {\n    try {\n      const response = await fetch('API_URL'); // Replace 'API_URL' with the actual API endpoint to fetch the labels\n      const data = await response.json();\n      // Assuming the response contains an array of labels\n      setLabels(data.labels);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const onSelect = (selectedId) => console.log(selectedId);\n\n  const onChange = (data) => {\n    setAnnotations(data);\n    data.forEach((annotation) => {\n      const { id, mark } = annotation;\n      const { x, y, width, height } = mark;\n      // Calculate normalized values and perform annotation saving logic\n      // ...\n    });\n  };\n\n  const handleDeleteBox = (id) => {\n    const updatedAnnotations = annotations.filter((annotation) => annotation.id !== id);\n    setAnnotations(updatedAnnotations);\n  };\n\n  const handleImageClick = (image) => {\n    setSelectedImage(image);\n    setAnnotations([]);\n  };\n\n  return (\n    <div className=\"AnnotateImage\">\n      <div className=\"image-list\">\n        {images.map((image) => (\n          <div\n            key={image.id}\n            className={`image-thumbnail ${selectedImage && selectedImage.id === image.id ? 'selected' : ''}`}\n            onClick={() => handleImageClick(image)}\n          >\n            <img src={image.url} alt={`Image ${image.id}`} />\n          </div>\n        ))}\n      </div>\n      <div className=\"annotation-section\">\n        {selectedImage && (\n          <ReactPictureAnnotation\n            image={selectedImage.url}\n            onSelect={onSelect}\n            onChange={onChange}\n            width={pageSize.width}\n            height={pageSize.height}\n            annotations={annotations}\n            renderAnnotation={({ annotation }) => (\n              <div style={{ position: 'absolute', left: annotation.position.x, top: annotation.position.y }}>\n                <input\n                  type=\"text\"\n                  value={annotation.content}\n                  onChange={(e) => {\n                    const updatedAnnotations = [...annotations];\n                    const index = updatedAnnotations.findIndex((a) => a.id === annotation.id);\n                    updatedAnnotations[index].content = e.target.value;\n                    setAnnotations(updatedAnnotations);\n                  }}\n                />\n                <button onClick={() => handleDeleteBox(annotation.id)}>Delete</button>\n              </div>\n            )}\n          />\n        )}\n        <div className=\"label-section\">\n          <h3>Labels</h3>\n          {labels.map((label) => (\n            <div\n              key={label.id}\n              className={`label ${selectedLabels.includes(label) ? 'selected' : ''}`}\n              onClick={() => handleLabelToggle(label)}\n            >\n              {label.name}\n            </div>\n          ))}\n        </div>\n        <div className=\"button-section\">\n          <button className=\"done-button\" onClick={handleDoneClick}>Done</button>\n          <button className=\"reset-button\" onClick={handleResetClick}>Reset</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AnnotateImage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
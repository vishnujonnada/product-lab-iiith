{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { ReactPictureAnnotation } from 'react-picture-annotation';\n\n// const AnnotateImage = () => {\n//   const [pageSize, setPageSize] = useState({\n//     width: window.innerWidth,\n//     height: window.innerHeight\n//   });\n//   const [annotations, setAnnotations] = useState([]);\n\n//   const onResize = () => {\n//     setPageSize({ width: window.innerWidth, height: window.innerHeight });\n//   };\n\n//   useEffect(() => {\n//     window.addEventListener('resize', onResize);\n//     return () => window.removeEventListener('resize', onResize);\n//   }, []);\n\n//   const onSelect = (selectedId) => console.log(selectedId);\n\n//   const onChange = (data) => {\n//     setAnnotations(data);\n//   };\n\n//   const handleDeleteBox = (id) => {\n//     const updatedAnnotations = annotations.filter((annotation) => annotation.id !== id);\n//     setAnnotations(updatedAnnotations);\n//   };\n\n//   return (\n//     <div className=\"AnnotateImage\">\n//       <ReactPictureAnnotation\n//         image=\"https://encrypted-tbn1.gstatic.com/licensed-image?q=tbn:ANd9GcT7p48zgkqUyYDdx7AGnlWVOEh6vpc8QHHPh0mAtn_73_jD_etGCyAexD1ArARBsGl4HqZYyGjcpRJRo3A\" // Update the image URL\n//         onSelect={onSelect}\n//         onChange={onChange}\n//         width={pageSize.width}\n//         height={pageSize.height}\n//         annotations={annotations}\n//         renderAnnotation={({ annotation }) => (\n//           <div style={{ position: 'absolute', left: annotation.position.x, top: annotation.position.y }}>\n//             <input\n//               type=\"text\"\n//               value={annotation.content}\n//               onChange={(e) => {\n//                 const updatedAnnotations = [...annotations];\n//                 const index = updatedAnnotations.findIndex((a) => a.id === annotation.id);\n//                 updatedAnnotations[index].content = e.target.value;\n//                 setAnnotations(updatedAnnotations);\n//               }}\n//             />\n//             <button onClick={() => handleDeleteBox(annotation.id)}>Delete</button>\n//           </div>\n//         )}\n//       />\n//     </div>\n//   );\n// };\n\n// export default AnnotateImage;\n\n// import React, { useState, useEffect } from 'react';\n// import { ReactPictureAnnotation } from 'react-picture-annotation';\n\n// const AnnotateImage = () => {\n//   const [pageSize, setPageSize] = useState({\n//     width: window.innerWidth,\n//     height: window.innerHeight\n//   });\n//   const [annotations, setAnnotations] = useState([]);\n\n//   const onResize = () => {\n//     setPageSize({ width: window.innerWidth, height: window.innerHeight });\n//   };\n\n//   useEffect(() => {\n//     window.addEventListener('resize', onResize);\n//     return () => window.removeEventListener('resize', onResize);\n//   }, []);\n\n//   const onSelect = (selectedId) => console.log(selectedId);\n\n//   const onChange = (data) => {\n//     setAnnotations(data);\n//     console.log(getYoloAnnotations(data));\n//   };\n\n//   const handleDeleteBox = (id) => {\n//     const updatedAnnotations = annotations.filter((annotation) => annotation.id !== id);\n//     setAnnotations(updatedAnnotations);\n//   };\n\n//   const getYoloAnnotations = (data) => {\n//     return data\n//       .map(({ geometry, content }) => {\n//         if (!geometry) return ''; // Add null check for geometry\n\n//         const { x, y, width, height } = geometry;\n\n//         const normalizedX = x / pageSize.width;\n//         const normalizedY = y / pageSize.height;\n//         const normalizedWidth = width / pageSize.width;\n//         const normalizedHeight = height / pageSize.height;\n\n//         return `${content} ${normalizedX} ${normalizedY} ${normalizedWidth} ${normalizedHeight}`;\n//       })\n//       .join('\\n');\n//   };\n\n//   return (\n//     <div className=\"AnnotateImage\">\n//       <ReactPictureAnnotation\n//         image=\"https://encrypted-tbn1.gstatic.com/licensed-image?q=tbn:ANd9GcT7p48zgkqUyYDdx7AGnlWVOEh6vpc8QHHPh0mAtn_73_jD_etGCyAexD1ArARBsGl4HqZYyGjcpRJRo3A\" // Update the image URL\n//         onSelect={onSelect}\n//         onChange={onChange}\n//         width={pageSize.width}\n//         height={pageSize.height}\n//         annotations={annotations}\n//         renderAnnotation={({ annotation }) => (\n//           <div style={{ position: 'absolute', left: annotation.position.x, top: annotation.position.y }}>\n//             <input\n//               type=\"text\"\n//               value={annotation.content}\n//               onChange={(e) => {\n//                 const updatedAnnotations = [...annotations];\n//                 const index = updatedAnnotations.findIndex((a) => a.id === annotation.id);\n//                 updatedAnnotations[index].content = e.target.value;\n//                 setAnnotations(updatedAnnotations);\n//               }}\n//             />\n//             <button onClick={() => handleDeleteBox(annotation.id)}>Delete</button>\n//           </div>\n//         )}\n//       />\n//     </div>\n//   );\n// };\n\n// export default AnnotateImage;","map":{"version":3,"names":[],"sources":["/home/vishnapanyala/Desktop/myapp/src/components/annotate.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { ReactPictureAnnotation } from 'react-picture-annotation';\n\n\n// const AnnotateImage = () => {\n//   const [pageSize, setPageSize] = useState({\n//     width: window.innerWidth,\n//     height: window.innerHeight\n//   });\n//   const [annotations, setAnnotations] = useState([]);\n\n//   const onResize = () => {\n//     setPageSize({ width: window.innerWidth, height: window.innerHeight });\n//   };\n\n//   useEffect(() => {\n//     window.addEventListener('resize', onResize);\n//     return () => window.removeEventListener('resize', onResize);\n//   }, []);\n\n//   const onSelect = (selectedId) => console.log(selectedId);\n\n//   const onChange = (data) => {\n//     setAnnotations(data);\n//   };\n\n//   const handleDeleteBox = (id) => {\n//     const updatedAnnotations = annotations.filter((annotation) => annotation.id !== id);\n//     setAnnotations(updatedAnnotations);\n//   };\n\n//   return (\n//     <div className=\"AnnotateImage\">\n//       <ReactPictureAnnotation\n//         image=\"https://encrypted-tbn1.gstatic.com/licensed-image?q=tbn:ANd9GcT7p48zgkqUyYDdx7AGnlWVOEh6vpc8QHHPh0mAtn_73_jD_etGCyAexD1ArARBsGl4HqZYyGjcpRJRo3A\" // Update the image URL\n//         onSelect={onSelect}\n//         onChange={onChange}\n//         width={pageSize.width}\n//         height={pageSize.height}\n//         annotations={annotations}\n//         renderAnnotation={({ annotation }) => (\n//           <div style={{ position: 'absolute', left: annotation.position.x, top: annotation.position.y }}>\n//             <input\n//               type=\"text\"\n//               value={annotation.content}\n//               onChange={(e) => {\n//                 const updatedAnnotations = [...annotations];\n//                 const index = updatedAnnotations.findIndex((a) => a.id === annotation.id);\n//                 updatedAnnotations[index].content = e.target.value;\n//                 setAnnotations(updatedAnnotations);\n//               }}\n//             />\n//             <button onClick={() => handleDeleteBox(annotation.id)}>Delete</button>\n//           </div>\n//         )}\n//       />\n//     </div>\n//   );\n// };\n\n// export default AnnotateImage;\n\n// import React, { useState, useEffect } from 'react';\n// import { ReactPictureAnnotation } from 'react-picture-annotation';\n\n// const AnnotateImage = () => {\n//   const [pageSize, setPageSize] = useState({\n//     width: window.innerWidth,\n//     height: window.innerHeight\n//   });\n//   const [annotations, setAnnotations] = useState([]);\n\n//   const onResize = () => {\n//     setPageSize({ width: window.innerWidth, height: window.innerHeight });\n//   };\n\n//   useEffect(() => {\n//     window.addEventListener('resize', onResize);\n//     return () => window.removeEventListener('resize', onResize);\n//   }, []);\n\n//   const onSelect = (selectedId) => console.log(selectedId);\n\n//   const onChange = (data) => {\n//     setAnnotations(data);\n//     console.log(getYoloAnnotations(data));\n//   };\n\n//   const handleDeleteBox = (id) => {\n//     const updatedAnnotations = annotations.filter((annotation) => annotation.id !== id);\n//     setAnnotations(updatedAnnotations);\n//   };\n\n//   const getYoloAnnotations = (data) => {\n//     return data\n//       .map(({ geometry, content }) => {\n//         if (!geometry) return ''; // Add null check for geometry\n\n//         const { x, y, width, height } = geometry;\n\n//         const normalizedX = x / pageSize.width;\n//         const normalizedY = y / pageSize.height;\n//         const normalizedWidth = width / pageSize.width;\n//         const normalizedHeight = height / pageSize.height;\n\n//         return `${content} ${normalizedX} ${normalizedY} ${normalizedWidth} ${normalizedHeight}`;\n//       })\n//       .join('\\n');\n//   };\n\n//   return (\n//     <div className=\"AnnotateImage\">\n//       <ReactPictureAnnotation\n//         image=\"https://encrypted-tbn1.gstatic.com/licensed-image?q=tbn:ANd9GcT7p48zgkqUyYDdx7AGnlWVOEh6vpc8QHHPh0mAtn_73_jD_etGCyAexD1ArARBsGl4HqZYyGjcpRJRo3A\" // Update the image URL\n//         onSelect={onSelect}\n//         onChange={onChange}\n//         width={pageSize.width}\n//         height={pageSize.height}\n//         annotations={annotations}\n//         renderAnnotation={({ annotation }) => (\n//           <div style={{ position: 'absolute', left: annotation.position.x, top: annotation.position.y }}>\n//             <input\n//               type=\"text\"\n//               value={annotation.content}\n//               onChange={(e) => {\n//                 const updatedAnnotations = [...annotations];\n//                 const index = updatedAnnotations.findIndex((a) => a.id === annotation.id);\n//                 updatedAnnotations[index].content = e.target.value;\n//                 setAnnotations(updatedAnnotations);\n//               }}\n//             />\n//             <button onClick={() => handleDeleteBox(annotation.id)}>Delete</button>\n//           </div>\n//         )}\n//       />\n//     </div>\n//   );\n// };\n\n// export default AnnotateImage;\n\n\n\n\n\n\n\n\n\n"],"mappings":"AAAA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}